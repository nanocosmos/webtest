{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/get-a-quote/components/Quote.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport icon from '../../../assets/icons/white-handdrawn-chatbubble.png';\nimport NewDealAutomation from '../../../layout/ui/ActiveCampaign/NewDealAutomation';\nimport Intro from '../components/Intro';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '95vh'\n    },\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      margin: '0 auto'\n    }\n  },\n  flexItem: {\n    [theme.breakpoints.up('xs')]: {\n      flexBasis: '50%',\n      padding: theme.spacing(4),\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    '&:first-of-type': {\n      [theme.breakpoints.up('xs')]: {\n        paddingBottom: 0\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: theme.spacing(4)\n      }\n    },\n    '&:last-of-type': {\n      [theme.breakpoints.up('xs')]: {\n        paddingTop: 0\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: theme.spacing(4)\n      }\n    }\n  },\n  form: {\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(1)\n  },\n  thankYou: {\n    textAlign: 'center'\n  },\n  icon: {\n    height: '100px'\n  },\n  logo: {\n    [theme.breakpoints.up('xs')]: {\n      width: '200px'\n    },\n    [theme.breakpoints.up('md')]: {\n      display: 'block',\n      width: '300px'\n    }\n  },\n  subtitleText: {\n    fontWeight: 300,\n    lineHeight: 1.3\n  }\n}));\nexport default function Quote() {\n  const classes = useStyles();\n  const [sent, setSentSuccessfully] = useState(false);\n  const form = clsx(classes.form, {\n    [classes.thankYou]: sent\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, sent ? /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.icon,\n    src: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 27\n    }\n  }) : null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitleText,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, sent ? \"Thank you!\" : \"Your details\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.subtitleText,\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, sent ? \"We will reach out to you as soon as possible!\" : \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.\"), sent ? null : /*#__PURE__*/React.createElement(NewDealAutomation, {\n    sendMessage: () => setSentSuccessfully(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/get-a-quote/components/Quote.js"],"names":["React","useState","clsx","makeStyles","Typography","icon","NewDealAutomation","Intro","useStyles","theme","root","breakpoints","up","display","flexDirection","minHeight","justifyContent","margin","flexItem","flexBasis","padding","spacing","paddingBottom","paddingTop","form","backgroundColor","palette","primary","light","borderRadius","thankYou","textAlign","height","logo","width","subtitleText","fontWeight","lineHeight","Quote","classes","sent","setSentSuccessfully"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAOC,IAAP,MAAiB,sDAAjB;AACA,OAAOC,iBAAP,MAA8B,qDAA9B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,KAACD,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BC,MAAAA,OAAO,EAAE,MADiB;AAE1BC,MAAAA,aAAa,EAAE,QAFW;AAG1BC,MAAAA,SAAS,EAAE;AAHe,KAD5B;AAMF,KAACN,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BE,MAAAA,aAAa,EAAE,KADW;AAE1BE,MAAAA,cAAc,EAAE,QAFU;AAG1BC,MAAAA,MAAM,EAAE;AAHkB;AAN5B,GAD+B;AAarCC,EAAAA,QAAQ,EAAE;AACN,KAACT,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BO,MAAAA,SAAS,EAAE,KADe;AAE1BC,MAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CAFiB;AAG1BR,MAAAA,OAAO,EAAE,MAHiB;AAI1BC,MAAAA,aAAa,EAAE,QAJW;AAK1BE,MAAAA,cAAc,EAAE;AALU,KADxB;AAQN,uBAAmB;AACf,OAACP,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BU,QAAAA,aAAa,EAAE;AADW,OADf;AAIf,OAACb,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BQ,QAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AADiB;AAJf,KARb;AAgBN,sBAAkB;AACd,OAACZ,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BW,QAAAA,UAAU,EAAE;AADc,OADhB;AAId,OAACd,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BQ,QAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd;AADiB;AAJhB;AAhBZ,GAb2B;AAsCrCG,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,OAAd,CAAsBC,KADrC;AAEFR,IAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAc,CAAd,CAFP;AAGFQ,IAAAA,YAAY,EAAEpB,KAAK,CAACY,OAAN,CAAc,CAAd;AAHZ,GAtC+B;AA2CrCS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL,GA3C2B;AA8CrC1B,EAAAA,IAAI,EAAE;AACF2B,IAAAA,MAAM,EAAE;AADN,GA9C+B;AAiDrCC,EAAAA,IAAI,EAAE;AACF,KAACxB,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BsB,MAAAA,KAAK,EAAE;AADmB,KAD5B;AAIF,KAACzB,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BC,MAAAA,OAAO,EAAE,OADiB;AAE1BqB,MAAAA,KAAK,EAAE;AAFmB;AAJ5B,GAjD+B;AA0DrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE,GADF;AAEVC,IAAAA,UAAU,EAAE;AAFF;AA1DuB,CAAZ,CAAD,CAA5B;AAgEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAMC,OAAO,GAAG/B,SAAS,EAAzB;AACA,QAAM,CAACgC,IAAD,EAAOC,mBAAP,IAA8BxC,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMuB,IAAI,GAAGtB,IAAI,CAAEqC,OAAO,CAACf,IAAV,EAAgB;AAC7B,KAACe,OAAO,CAACT,QAAT,GAAoBU;AADS,GAAhB,CAAjB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAAC7B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE6B,OAAO,CAACrB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAEqB,OAAO,CAACrB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEM,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQgB,IAAI,gBACF;AAAK,IAAA,SAAS,EAAED,OAAO,CAAClC,IAAxB;AAA8B,IAAA,GAAG,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAEF,IAJV,eAMI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEkC,OAAO,CAACJ,YAA/B;AAA6C,IAAA,OAAO,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,IAAI,GAAG,YAAH,GAAkB,cAD5B,CANJ,eASI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACJ,YAA/B;AAA6C,IAAA,OAAO,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,IAAI,GAAG,+CAAH,GAAqD,0DAD9D,CATJ,EAaQA,IAAI,GACF,IADE,gBAEF,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAE,MAAMC,mBAAmB,CAAC,IAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfV,CADJ,CAJJ,CADJ;AA4BH","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport icon from '../../../assets/icons/white-handdrawn-chatbubble.png';\nimport NewDealAutomation from '../../../layout/ui/ActiveCampaign/NewDealAutomation';\nimport Intro from '../components/Intro';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            minHeight: '95vh'\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            margin: '0 auto',\n        }\n    },\n    flexItem: {\n        [theme.breakpoints.up('xs')]: {\n            flexBasis: '50%',\n            padding: theme.spacing(4),\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n        },\n        '&:first-of-type': {\n            [theme.breakpoints.up('xs')]: {\n                paddingBottom: 0,\n            },\n            [theme.breakpoints.up('md')]: {\n                padding: theme.spacing(4)\n            }\n        },\n        '&:last-of-type': {\n            [theme.breakpoints.up('xs')]: {\n                paddingTop: 0,\n            },\n            [theme.breakpoints.up('md')]: {\n                padding: theme.spacing(4)\n            }\n        }\n    },\n    form: {\n        backgroundColor: theme.palette.primary.light,\n        padding: theme.spacing(2),\n        borderRadius: theme.spacing(1)\n    },\n    thankYou: {\n        textAlign: 'center'\n    },\n    icon: {\n        height: '100px'\n    },\n    logo: {\n        [theme.breakpoints.up('xs')]: {\n            width: '200px',\n        },\n        [theme.breakpoints.up('md')]: {\n            display: 'block',\n            width: '300px',\n        }\n    },\n    subtitleText: {\n        fontWeight: 300,\n        lineHeight: 1.3\n    },\n}))\n\nexport default function Quote() {\n    const classes = useStyles();\n    const [sent, setSentSuccessfully] = useState(false)\n\n    const form = clsx( classes.form, {\n        [classes.thankYou]: sent\n    })\n    return (\n        <div className={classes.root}>\n            <div className={classes.flexItem}>\n                <Intro/>\n            </div>\n            <div className={classes.flexItem}>\n                <div className={form}>\n                    {\n                        sent\n                        ? <img className={classes.icon} src={icon}/>\n                        : null\n                    }\n                    <Typography className={classes.subtitleText} variant=\"h4\">\n                        { sent ? \"Thank you!\" : \"Your details\" }\n                    </Typography>\n                    <Typography className={classes.subtitleText} variant=\"body1\">\n                        {sent ? \"We will reach out to you as soon as possible!\" : \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr.\"}\n                    </Typography>\n                    {\n                        sent\n                        ? null\n                        : <NewDealAutomation sendMessage={() => setSentSuccessfully(true)}/>\n\n                    }\n                </div>\n            </div>\n        </div >\n    );\n}\n"]},"metadata":{},"sourceType":"module"}