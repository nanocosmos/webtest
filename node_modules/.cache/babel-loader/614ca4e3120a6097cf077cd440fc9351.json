{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/layout/ui/Video/VideoModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Badge, Typography, Modal, Tooltip, Button } from '@material-ui/core';\nimport Youtube from 'react-youtube';\nlet updatedWidth = \"\";\nlet updatedHeight = \"\";\n\nconst getWindowDimensions = viewport => {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  let calcWidth = width - width * 0.1;\n  let calcHeight = height - height * 0.5;\n  updatedHeight = height - height * 0.5;\n\n  switch (viewport) {\n    case 'xs':\n    case 'sm':\n      calcWidth = width - width * 0.2;\n      updatedWidth = width - width * 0.2;\n      break;\n\n    case 'md':\n      calcWidth = width - width * 0.5;\n      updatedWidth = width - width * 0.5;\n      break;\n\n    case 'lg':\n      calcWidth = width - width * 0.4;\n      updatedWidth = width - width * 0.4;\n      break;\n  }\n\n  return {\n    calcWidth,\n    calcHeight\n  };\n};\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        cursor: 'pointer'\n      }\n    }\n  },\n  content: {\n    [theme.breakpoints.up('xs')]: {\n      height: getWindowDimensions('xs').calcHeight,\n      backgroundColor: theme.palette.background.default,\n      borderRadius: theme.spacing(1),\n      width: getWindowDimensions('xs').calcWidth,\n      padding: theme.spacing(2)\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: getWindowDimensions('sm').calcWidth\n    },\n    [theme.breakpoints.up('md')]: {\n      width: getWindowDimensions('md').calcWidth\n    }\n  }\n}));\nexport default function VideoModal() {\n  const classes = useStyles(); // const [startWebcaster, setStartWebcaster] = useState(false);\n\n  const [openModal, setOpenModal] = useState(true);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const settings = {\n    width: updatedWidth,\n    height: updatedHeight\n  };\n  console.log(updatedHeight, updatedWidth);\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    className: classes.modal,\n    open: openModal,\n    onClose: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Youtube, {\n    videoId: \"xACeRyKnjxs\",\n    opts: settings,\n    className: classes.youtube,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/layout/ui/Video/VideoModal.js"],"names":["React","useState","useEffect","makeStyles","Badge","Typography","Modal","Tooltip","Button","Youtube","updatedWidth","updatedHeight","getWindowDimensions","viewport","innerWidth","width","innerHeight","height","window","calcWidth","calcHeight","useStyles","theme","modal","breakpoints","up","display","alignItems","justifyContent","cursor","content","backgroundColor","palette","background","default","borderRadius","spacing","padding","VideoModal","classes","openModal","setOpenModal","windowDimensions","setWindowDimensions","settings","console","log","handleCloseModal","handleOpenModal","youtube"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Badge, Typography, Modal, Tooltip, Button } from '@material-ui/core';\nimport Youtube from 'react-youtube';\n\nlet updatedWidth = \"\";\nlet updatedHeight = \"\";\n\nconst getWindowDimensions = (viewport) => {\n    const { innerWidth: width, innerHeight: height } = window;\n    let calcWidth = width - (width*0.1);\n    let calcHeight = height - (height*0.5);\n    updatedHeight = height - (height*0.5);\n\n    switch (viewport) {\n        case 'xs':\n        case 'sm':\n            calcWidth = width - (width*0.2);\n            updatedWidth = width - (width*0.2);\n            break;\n        case 'md':\n            calcWidth = width - (width*0.5);\n            updatedWidth = width - (width*0.5);\n            break;\n        case 'lg':\n            calcWidth = width - (width*0.4);\n            updatedWidth = width - (width*0.4);\n            break;\n    }\n\n    return {\n        calcWidth,\n        calcHeight\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            '&:hover': {\n                cursor: 'pointer'\n            }\n        }\n    },\n    content: {\n        [theme.breakpoints.up('xs')]: {\n            height: getWindowDimensions('xs').calcHeight,\n            backgroundColor: theme.palette.background.default,\n            borderRadius: theme.spacing(1),\n            width: getWindowDimensions('xs').calcWidth,\n            padding: theme.spacing(2)\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: getWindowDimensions('sm').calcWidth\n        },\n        [theme.breakpoints.up('md')]: {\n            width: getWindowDimensions('md').calcWidth\n        }\n    }\n}))\n\nexport default function VideoModal() {\n    const classes = useStyles();\n    // const [startWebcaster, setStartWebcaster] = useState(false);\n    const [openModal, setOpenModal] = useState(true);\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const settings = {\n        width: updatedWidth,\n        height: updatedHeight,\n    }\nconsole.log(updatedHeight, updatedWidth)\n    const handleCloseModal = () => {\n        setOpenModal(false)\n    }\n\n    const handleOpenModal = () => {\n        setOpenModal(true);\n    }\n\n    return (\n        <Modal\n            className={classes.modal}\n            open={openModal}\n            onClose={handleCloseModal}\n        >\n            <div className={classes.content}>\n                <Youtube videoId={\"xACeRyKnjxs\"} opts={settings} className={classes.youtube} />\n            </div>\n        </Modal>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}