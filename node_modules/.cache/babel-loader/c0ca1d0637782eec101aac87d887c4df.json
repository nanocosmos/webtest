{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/video/components/EmbeddedVideo.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VideoPlayer from 'react-responsive-embed';\nimport { Typography } from '@material-ui/core';\nimport player from '../../../assets/icons/white-h5live.png';\nimport HeaderWrapper from '../../../layout/withStyles/Header/Wrapper';\nimport Overline from '../../../layout/withStyles/Header/Overline';\nimport BoldTitle from '../../../layout/withStyles/Header/BoldTitle';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  videoPlayer: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      margin: '0 auto'\n    },\n    [theme.breakpoints.up('sm')]: {\n      maxWidth: '550px',\n      maxHeight: '100%'\n    },\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '700px',\n      maxHeight: '100%'\n    }\n  },\n  image: {\n    [theme.breakpoints.up('xs')]: {\n      height: '250px',\n      display: 'block',\n      margin: '0 auto'\n    },\n    [theme.breakpoints.up('sm')]: {},\n    [theme.breakpoints.up('md')]: {\n      height: '50vh'\n    }\n  },\n  imageWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      height: 360,\n      width: 480,\n      maxWidth: '100%',\n      margin: '0 auto',\n      marginTop: theme.spacing(2),\n      backgroundColor: theme.palette.primary.light,\n      borderRadius: theme.spacing(0.5),\n      boxShadow: theme.shadows[8]\n    },\n    [theme.breakpoints.up('sm')]: {},\n    [theme.breakpoints.up('md')]: {}\n  }\n}));\n\nconst getParams = url => {\n  let params = new URLSearchParams(url);\n\n  if (params.has(\"watch\")) {\n    return params.get(\"watch\");\n  } else {\n    return false;\n  }\n};\n\nexport default function EmbeddedVideo() {\n  const classes = useStyles();\n  const [videoId] = useState(getParams(window.location.search));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderWrapper, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Overline, {\n    color: \"secondary\",\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Lorem ipsum dolor sit amet\"), /*#__PURE__*/React.createElement(BoldTitle, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Lorem ipsum dolor sit amet\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.videoPlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, videoId ? /*#__PURE__*/React.createElement(VideoPlayer, {\n    src: `https://www.youtube.com/embed/${videoId}`,\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/video/components/EmbeddedVideo.js"],"names":["React","useState","makeStyles","VideoPlayer","Typography","player","HeaderWrapper","Overline","BoldTitle","useStyles","theme","root","padding","spacing","videoPlayer","breakpoints","up","maxWidth","maxHeight","margin","image","height","display","imageWrapper","width","marginTop","backgroundColor","palette","primary","light","borderRadius","boxShadow","shadows","getParams","url","params","URLSearchParams","has","get","EmbeddedVideo","classes","videoId","window","location","search"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VideoPlayer from 'react-responsive-embed';\nimport { Typography } from '@material-ui/core';\n\nimport player from '../../../assets/icons/white-h5live.png'\nimport HeaderWrapper from '../../../layout/withStyles/Header/Wrapper';\nimport Overline from '../../../layout/withStyles/Header/Overline';\nimport BoldTitle from '../../../layout/withStyles/Header/BoldTitle';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(4),\n    },\n    videoPlayer: {\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: '100%',\n            maxHeight: '100%',\n            margin: '0 auto',\n        },\n        [theme.breakpoints.up('sm')]: {\n            maxWidth: '550px',\n            maxHeight: '100%'\n        },\n        [theme.breakpoints.up('md')]: {\n            maxWidth: '700px',\n            maxHeight: '100%'\n        },\n    },\n    image: {\n        [theme.breakpoints.up('xs')]: {\n            height: '250px',\n            display: 'block',\n            margin: '0 auto'\n        },\n        [theme.breakpoints.up('sm')]: {\n        },\n        [theme.breakpoints.up('md')]: {\n            height: '50vh'\n        }\n    },\n    imageWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            height: 360,\n            width: 480,\n            maxWidth: '100%',\n            margin: '0 auto',\n            marginTop: theme.spacing(2),\n            backgroundColor: theme.palette.primary.light,\n            borderRadius: theme.spacing(0.5),\n            boxShadow: theme.shadows[8]\n        },\n        [theme.breakpoints.up('sm')]: {\n        },\n        [theme.breakpoints.up('md')]: {\n        },\n    }\n}))\n\nconst getParams = (url) => {\n    let params = new URLSearchParams(url);\n    if (params.has(\"watch\")) { return params.get(\"watch\") }\n    else {\n        return false\n    }\n}\n\nexport default function EmbeddedVideo() {\n    const classes = useStyles();\n    const [videoId] = useState(getParams(window.location.search))\n\n    return (\n        <div className={classes.root}>\n            <HeaderWrapper align=\"center\">\n                <Overline color=\"secondary\" variant=\"button\">\n                    Lorem ipsum dolor sit amet\n                </Overline>\n                <BoldTitle color=\"white\">\n                    Lorem ipsum dolor sit amet\n                </BoldTitle>\n            </HeaderWrapper>\n            <div className={classes.videoPlayer}>\n                {\n                    videoId\n                        ? <VideoPlayer src={`https://www.youtube.com/embed/${videoId}`} allowFullScreen />\n                        :\n                        <div className={classes.imageWrapper}>\n                        </div>\n                }\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}