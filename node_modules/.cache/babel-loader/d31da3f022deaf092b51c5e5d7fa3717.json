{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/layout/ui/Questions.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Link } from '@material-ui/core';\nimport { ChevronRight, OpenInNew } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"&:hover\": {\n      cursor: 'pointer'\n    },\n    [theme.breakpoints.up('xs')]: {\n      margin: theme.spacing(0.5),\n      padding: theme.spacing(0.5),\n      borderRadius: '5px',\n      backgroundColor: theme.palette.primary.light,\n      color: theme.palette.common.white,\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }\n  },\n  icon: {\n    [theme.breakpoints.up('xs')]: {\n      width: '60px'\n    }\n  },\n  // TEXT\n  link: {\n    lineHeight: 1,\n    color: theme.palette.common.white\n  }\n}));\nexport default function Question(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    onClick: () => {\n      window.open(props.link);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link,\n    href: props.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, props.text)), /*#__PURE__*/React.createElement(OpenInNew, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/layout/ui/Questions.js"],"names":["React","makeStyles","Typography","Link","ChevronRight","OpenInNew","useStyles","theme","root","cursor","breakpoints","up","margin","spacing","padding","borderRadius","backgroundColor","palette","primary","light","color","common","white","display","flexDirection","alignItems","justifyContent","icon","width","link","lineHeight","Question","props","classes","window","open","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,oBAAxC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,eAAW;AACPC,MAAAA,MAAM,EAAE;AADD,KADT;AAIF,KAACF,KAAK,CAACG,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd,CADkB;AAE1BC,MAAAA,OAAO,EAAEP,KAAK,CAACM,OAAN,CAAc,GAAd,CAFiB;AAG1BE,MAAAA,YAAY,EAAE,KAHY;AAI1BC,MAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,OAAd,CAAsBC,KAJb;AAK1BC,MAAAA,KAAK,EAAEb,KAAK,CAACU,OAAN,CAAcI,MAAd,CAAqBC,KALF;AAM1BC,MAAAA,OAAO,EAAE,MANiB;AAO1BC,MAAAA,aAAa,EAAE,KAPW;AAQ1BC,MAAAA,UAAU,EAAE,QARc;AAS1BC,MAAAA,cAAc,EAAE;AATU;AAJ5B,GAD+B;AAiBrCC,EAAAA,IAAI,EAAE;AACF,KAACpB,KAAK,CAACG,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BiB,MAAAA,KAAK,EAAE;AADmB;AAD5B,GAjB+B;AAsBrC;AACAC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,CADV;AAEFV,IAAAA,KAAK,EAAEb,KAAK,CAACU,OAAN,CAAcI,MAAd,CAAqBC;AAF1B;AAvB+B,CAAZ,CAAD,CAA5B;AA6BA,eAAe,SAASS,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAE2B,OAAO,CAACzB,IAAxB;AAA8B,IAAA,OAAO,EAAE,MAAM;AAAE0B,MAAAA,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACH,IAAlB;AAAyB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEI,OAAO,CAACJ,IAAzB;AAA+B,IAAA,IAAI,EAAEG,KAAK,CAACH,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACI,IADX,CADJ,CADJ,eAMI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Typography, Link } from '@material-ui/core';\nimport { ChevronRight, OpenInNew } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"&:hover\": {\n            cursor: 'pointer'\n        },\n        [theme.breakpoints.up('xs')]: {\n            margin: theme.spacing(0.5),\n            padding: theme.spacing(0.5),\n            borderRadius: '5px',\n            backgroundColor: theme.palette.primary.light,\n            color: theme.palette.common.white,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n        }\n    },\n    icon: {\n        [theme.breakpoints.up('xs')]: {\n            width: '60px'\n        }\n    },\n    // TEXT\n    link: {\n        lineHeight: 1,\n        color: theme.palette.common.white\n    }\n}))\n\nexport default function Question(props) {\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root} onClick={() => { window.open(props.link) }}>\n            <Typography variant=\"subtitle1\">\n                <Link className={classes.link} href={props.link}>\n                    {props.text}\n                </Link>\n            </Typography>\n            <OpenInNew fontSize=\"small\" />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}