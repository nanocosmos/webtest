{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/blog/components/Skeleton.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, IconButton, CardActions, Button } from '@material-ui/core';\nimport { MoreVert, ArrowRightAlt } from '@material-ui/icons';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport * as link from '../../../utilities/link-config';\nimport dummy from '../../../assets/icons/orange-world.png';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  blogWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    minWidth: '100%',\n    [theme.breakpoints.up('500')]: {\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      flexWrap: 'wrap'\n    }\n  },\n  card: {\n    [theme.breakpoints.up('xs')]: {\n      margin: '0 auto',\n      marginBottom: theme.spacing(2),\n      width: '90%',\n      // flex: '1 1 90%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    },\n    [theme.breakpoints.up('550')]: {\n      margin: theme.spacing(1),\n      width: '46%' // flex: '1 1 46%'\n\n    },\n    [theme.breakpoints.up('800')]: {\n      width: '31%' // flex: '1 1 31%'\n\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '23%' // flex: '1 1 23%'\n\n    }\n  },\n  media: {\n    height: 190\n  },\n  tag: {\n    padding: theme.spacing(0.5, 1, 0.5, 1),\n    color: theme.palette.common.white\n  },\n  tagWrapper: {\n    cursor: 'pointer',\n    backgroundColor: theme.palette.primary.main,\n    display: 'inline-block',\n    marginRight: theme.spacing(0.5),\n    marginTop: theme.spacing(0.5),\n    borderRadius: theme.spacing(0.5)\n  },\n  title: {\n    marginTop: theme.spacing(1),\n    fontWeight: 700,\n    color: theme.palette.primary.light,\n    lineHeight: 1\n  },\n  buttonWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction Article(props) {\n  const {\n    loading = false\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      animation: \"wave\",\n      variant: \"circle\",\n      width: 40,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(Avatar, {\n      alt: `${props.author}_avatar`,\n      src: props.article.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }) // action={\n    //     loading\n    //         ? null\n    //         :\n    //         <IconButton>\n    //             <MoreVert />\n    //         </IconButton>\n    // }\n    ,\n    title: loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      style: {\n        marginBottom: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }) : props.article.author,\n    titleTypographyProps: {\n      color: 'primary'\n    },\n    subheader: loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"40%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }) : props.article.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    variant: \"rect\",\n    className: classes.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.article.imageSrc,\n    title: props.article.imageAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    width: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, props.article.tags.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      props.tagClicked(index);\n    },\n    value: tag.name,\n    id: index,\n    key: `${tag}-${index}`,\n    className: classes.tagWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"button\",\n    className: classes.tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }\n  }, tag.name))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }, props.article.title)))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Skeleton, {\n    animation: \"wave\",\n    width: 93,\n    height: 29,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(ArrowRightAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 34\n      }\n    }),\n    onClick: () => window.open(`${link.PAGE_ARTICLE}?&q=${props.article.id}`, '_self'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Read more\")));\n}\n\nexport default function ArticleSkeleton(props) {\n  const classes = useStyles();\n\n  const generateBlogPostDate = time => {\n    const date = new Date(time);\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let day = date.getDate();\n    let month = months[date.getMonth()];\n    let year = date.getFullYear();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    return `${day} ${month} ${year} - ${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}`;\n  };\n\n  const tagClicked = index => {\n    props.tagClicked(document.getElementById(index).getAttribute(\"value\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.blogWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, props.articles !== undefined ? props.articles.map((singleArticle, index) => /*#__PURE__*/React.createElement(Article, {\n    tagClicked: tagClicked,\n    key: index,\n    article: {\n      id: singleArticle.id,\n      author: singleArticle.author,\n      avatar: dummy,\n      title: singleArticle.title,\n      date: generateBlogPostDate(singleArticle.created_at),\n      imageSrc: `${link.STRAPI_URL}${singleArticle.titleImage.url}`,\n      imageAlt: singleArticle.titleImage.name,\n      tags: singleArticle.categories\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(Article, {\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 27\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/blog/components/Skeleton.js"],"names":["React","useState","useEffect","makeStyles","Card","CardHeader","CardContent","CardMedia","Avatar","Typography","IconButton","CardActions","Button","MoreVert","ArrowRightAlt","Skeleton","link","dummy","useStyles","theme","root","display","flexDirection","justifyContent","width","blogWrapper","minWidth","breakpoints","up","flexWrap","card","margin","marginBottom","spacing","media","height","tag","padding","color","palette","common","white","tagWrapper","cursor","backgroundColor","primary","main","marginRight","marginTop","borderRadius","title","fontWeight","light","lineHeight","buttonWrapper","Article","props","loading","classes","author","article","avatar","date","imageSrc","imageAlt","tags","map","index","tagClicked","name","window","open","PAGE_ARTICLE","id","ArticleSkeleton","generateBlogPostDate","time","Date","months","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","document","getElementById","getAttribute","articles","undefined","singleArticle","created_at","STRAPI_URL","titleImage","url","categories"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, IconButton, CardActions, Button } from '@material-ui/core';\nimport { MoreVert, ArrowRightAlt } from '@material-ui/icons';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport * as link from '../../../utilities/link-config';\nimport dummy from '../../../assets/icons/orange-world.png'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    blogWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        minWidth: '100%',\n        [theme.breakpoints.up('500')]: {\n            flexDirection: 'row',\n            justifyContent: 'flex-start',\n            flexWrap: 'wrap'\n        },\n    },\n    card: {\n        [theme.breakpoints.up('xs')]: {\n            margin: '0 auto',\n            marginBottom: theme.spacing(2),\n            width: '90%',\n            // flex: '1 1 90%',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between'\n        },\n        [theme.breakpoints.up('550')]: {\n            margin: theme.spacing(1),\n            width: '46%',\n            // flex: '1 1 46%'\n        },\n        [theme.breakpoints.up('800')]: {\n            width: '31%',\n            // flex: '1 1 31%'\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '23%',\n            // flex: '1 1 23%'\n        },\n    },\n    media: {\n        height: 190,\n    },\n    tag: {\n        padding: theme.spacing(0.5, 1, 0.5, 1),\n        color: theme.palette.common.white\n    },\n    tagWrapper: {\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary.main,\n        display: 'inline-block',\n        marginRight: theme.spacing(0.5),\n        marginTop: theme.spacing(0.5),\n        borderRadius: theme.spacing(0.5)\n    },\n    title: {\n        marginTop: theme.spacing(1),\n        fontWeight: 700,\n        color: theme.palette.primary.light,\n        lineHeight: 1\n    },\n    buttonWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n\n    }\n}));\n\nfunction Article(props) {\n    const { loading = false } = props;\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <div>\n                <CardHeader\n                    avatar={\n                        loading\n                            ?\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                            :\n                            <Avatar\n                                alt={`${props.author}_avatar`}\n                                src={props.article.avatar}\n                            />\n                    }\n                    // action={\n                    //     loading\n                    //         ? null\n                    //         :\n                    //         <IconButton>\n                    //             <MoreVert />\n                    //         </IconButton>\n                    // }\n                    title={\n                        loading\n                            ?\n                            <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n                            : props.article.author\n                    }\n                    titleTypographyProps={{\n                        color: 'primary',\n                    }}\n                    subheader={\n                        loading\n                            ? <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n                            : props.article.date\n                    }\n                />\n                {\n                    loading\n                        ?\n                        <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n                        :\n                        <CardMedia\n                            className={classes.media}\n                            image={props.article.imageSrc}\n                            title={props.article.imageAlt}\n                        />\n                }\n                <CardContent>\n                    {\n                        loading\n                            ?\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {\n                                    props.article.tags.map((tag, index) => (\n                                        <div onClick={() => { props.tagClicked(index) }} value={tag.name} id={index} key={`${tag}-${index}`} className={classes.tagWrapper}>\n                                            <Typography variant=\"button\" className={classes.tag}>\n                                                {tag.name}\n                                            </Typography>\n                                        </div>\n                                    ))\n                                }\n                                <Typography className={classes.title} variant=\"h6\">\n                                    {props.article.title}\n                                </Typography>\n                            </React.Fragment>\n                    }\n                </CardContent>\n            </div>\n            <CardActions className={classes.buttonWrapper}>\n            {\n                loading\n                    ?  <Skeleton animation=\"wave\" width={93} height={29} style={{ marginBottom: 6 }} />\n                    :\n                    <Button\n                        size=\"small\"\n                        color=\"primary\"\n                        endIcon={<ArrowRightAlt />}\n                        onClick={() => window.open(`${link.PAGE_ARTICLE}?&q=${props.article.id}`, '_self')}>\n                        Read more\n                    </Button>\n            }\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default function ArticleSkeleton(props) {\n    const classes = useStyles();\n\n    const generateBlogPostDate = (time) => {\n        const date = new Date(time)\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        let day = date.getDate();\n        let month = months[date.getMonth()];\n        let year = date.getFullYear();\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n\n        return `${day} ${month} ${year} - ${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}`\n    }\n\n    const tagClicked = (index) => {\n        props.tagClicked(document.getElementById(index).getAttribute(\"value\"))\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.blogWrapper}>\n                {\n                    props.articles !== undefined\n                        ?\n                        props.articles.map((singleArticle, index) => (\n                            <Article\n                                tagClicked={tagClicked}\n                                key={index}\n                                article={{\n                                    id: singleArticle.id,\n                                    author: singleArticle.author,\n                                    avatar: dummy,\n                                    title: singleArticle.title,\n                                    date: generateBlogPostDate(singleArticle.created_at),\n                                    imageSrc: `${link.STRAPI_URL}${singleArticle.titleImage.url}`,\n                                    imageAlt: singleArticle.titleImage.name,\n                                    tags: singleArticle.categories\n                                }}\n                            />\n                        ))\n                        : <Article loading />\n                }\n            </div>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}