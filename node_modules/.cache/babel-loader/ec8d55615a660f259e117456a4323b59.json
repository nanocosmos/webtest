{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/event/Event.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as link from '../../utilities/link-config';\nimport * as helper from '../../utilities/helper-methods';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport ExploreBanner from '../../layout/ui/Banner/ExploreBanner';\nimport NotFound from '../../layout/ui/NotFound/NotFound';\nimport Loading from '../../layout/ui/NanoLoading';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: 'calc(100vh - 200px)'\n  },\n  notFound: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  banner: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  }\n}));\nexport default function Event() {\n  const classes = useStyles();\n  const [event, setEvent] = useState([]);\n  const [searchParam] = useState('q');\n  const [loading, setLoading] = useState(true);\n  const [foundEvent, setFoundEvent] = useState(false);\n  const [fetchedEvent, setFetchedEvent] = useState(false);\n  const [banner, setBanner] = useState( /*#__PURE__*/React.createElement(ExploreBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  }));\n  const root = clsx(classes.root, {\n    [classes.notFound]: !foundEvent,\n    [classes.banner]: foundEvent\n  });\n\n  const fetchEvent = urlSuffix => {\n    axios.get(`${link.STRAPI_BASE}/events?urlSuffix_eq=${urlSuffix}`).then(response => {\n      if (response.data.length > 0) {\n        setFoundEvent(true);\n        setFetchedEvent(true);\n        setEvent(response.data[0]);\n        setBanner(helper.getBanner(response.data[0].bottomBanner));\n        setLoading(false);\n      } else {\n        setFoundEvent(false);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(error);\n      setFoundEvent(false);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    let params = new URLSearchParams(window.location.search);\n\n    if (params.has(searchParam)) {\n      setLoading(true);\n      fetchEvent(params.get(searchParam));\n    }\n\n    if (!params.has(searchParam)) {\n      setLoading(false);\n      setFoundEvent(false);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, foundEvent && fetchedEvent ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    image: `${link.STRAPI_URL}${event.eventLogo.url}`,\n    title: event.eventName,\n    date: {\n      start: event.startDate,\n      end: event.endDate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    event: event,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(NotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, !loading && fetchedEvent ? banner : null));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/event/Event.js"],"names":["React","useState","useEffect","clsx","axios","makeStyles","link","helper","Content","Header","ExploreBanner","NotFound","Loading","useStyles","theme","root","minHeight","notFound","display","flexDirection","alignItems","justifyContent","banner","Event","classes","event","setEvent","searchParam","loading","setLoading","foundEvent","setFoundEvent","fetchedEvent","setFetchedEvent","setBanner","fetchEvent","urlSuffix","get","STRAPI_BASE","then","response","data","length","getBanner","bottomBanner","catch","error","console","log","params","URLSearchParams","window","location","search","has","STRAPI_URL","eventLogo","url","eventName","start","startDate","end","endDate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as link from '../../utilities/link-config';\nimport * as helper from '../../utilities/helper-methods';\nimport Content from './components/Content';\nimport Header from './components/Header';\nimport ExploreBanner from '../../layout/ui/Banner/ExploreBanner';\nimport NotFound from '../../layout/ui/NotFound/NotFound';\nimport Loading from '../../layout/ui/NanoLoading';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: 'calc(100vh - 200px)',\n    },\n    notFound: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    banner: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    }\n}))\n\nexport default function Event() {\n    const classes = useStyles();\n    const [event, setEvent] = useState([])\n    const [searchParam] = useState('q');\n    const [loading, setLoading] = useState(true);\n    const [foundEvent, setFoundEvent] = useState(false)\n    const [fetchedEvent, setFetchedEvent] = useState(false)\n    const [banner, setBanner] = useState(<ExploreBanner />)\n\n    const root = clsx(classes.root, {\n        [classes.notFound]: !foundEvent,\n        [classes.banner]: foundEvent\n    })\n\n    const fetchEvent = (urlSuffix) => {\n        axios.get(`${link.STRAPI_BASE}/events?urlSuffix_eq=${urlSuffix}`)\n            .then((response) => {\n                if (response.data.length > 0) {\n                    setFoundEvent(true);\n                    setFetchedEvent(true);\n                    setEvent(response.data[0])\n                    setBanner(helper.getBanner(response.data[0].bottomBanner))\n                    setLoading(false);\n                } else {\n                    setFoundEvent(false);\n                    setLoading(false);\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n                setFoundEvent(false);\n                setLoading(false);\n            })\n    }\n\n    useEffect(() => {\n        let params = new URLSearchParams(window.location.search)\n        if (params.has(searchParam)) { \n            setLoading(true);\n            fetchEvent(params.get(searchParam)) \n        }\n        if (!params.has(searchParam)) { \n            setLoading(false);\n            setFoundEvent(false); \n        }\n    }, [])\n\n    return (\n        <div className={root}>\n            {\n                loading\n                    ? <Loading/>\n                    :\n                    <React.Fragment>\n                        {\n                            foundEvent && fetchedEvent\n                                ?\n                                <React.Fragment>\n                                    <Header image={`${link.STRAPI_URL}${event.eventLogo.url}`} title={event.eventName} date={{ start: event.startDate, end: event.endDate }} />\n                                    <Content event={event} />\n                                </React.Fragment>\n                                : <NotFound />\n                        }\n                    </React.Fragment>\n            }\n            <div>\n                {\n                    !loading && fetchedEvent\n                    ? banner\n                    : null\n                }\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}