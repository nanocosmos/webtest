{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/layout/ui/Forms/ApplicationForm.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FilePond } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport nanologo from '../../../assets/logo/white-logo.png';\nimport Response from './Response';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {},\n    [theme.breakpoints.up('md')]: {}\n  },\n  inputWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      margin: theme.spacing(2)\n    }\n  },\n  inputRow: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  },\n  input: {\n    width: '100%',\n    marginTop: theme.spacing(0.5),\n    '&:first-of-type': {\n      marginRight: theme.spacing(2)\n    }\n  },\n  buttonWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      marginRight: theme.spacing(2)\n    }\n  },\n  fileUploadWrapper: {\n    margin: theme.spacing(2)\n  },\n  title: {\n    fontWeight: 900,\n    lineHeight: 1,\n    textAlign: 'center'\n  },\n  image: {\n    height: '40px',\n    marginBottom: theme.spacing(1)\n  },\n  responseWrapper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(4),\n    borderRadius: theme.spacing(1)\n  }\n}));\nexport default function ApplicationForm(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [sent, setSent] = useState(false);\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [firstNameInvalid, setFirstNameInvalid] = useState(false);\n  const [lastNameInvalid, setLastNameInvalid] = useState(false);\n\n  const checkValidName = (isFirstName, name) => {\n    let regex = /^[a-zA-Z]+$/;\n    let valid = regex.test(name) && name.length > 1;\n\n    if (isFirstName) {\n      valid ? setFirstNameInvalid(false) : setFirstNameInvalid(true);\n    }\n\n    if (!isFirstName) {\n      valid ? setLastNameInvalid(false) : setLastNameInvalid(true);\n    }\n\n    return !valid;\n  };\n\n  const checkValidEmail = email => {\n    console.log(email);\n    let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let valid = regex.test(String(email).toLowerCase());\n    console.log(valid);\n    valid ? setEmailInvalid(false) : setEmailInvalid(true);\n    return !valid;\n  };\n\n  const startWorkflow = () => {\n    if (!emailInvalid && !firstNameInvalid && !lastNameInvalid && files.length !== 0) {\n      console.log(\"Sent Application\");\n      setSent(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, sent ?\n  /*#__PURE__*/\n  // <div className={classes.responseWrapper}>\n  //     <img className={classes.image} src={nanologo}/>\n  //     <Typography className={classes.title} variant=\"h4\">\n  //     </Typography>\n  //     <Typography variant=\"body1\">\n  //         We will reach out to you as soon as possible.\n  //     </Typography>\n  // </div>\n  React.createElement(Response, {\n    message: \"Thank you for your application\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"name\",\n    color: \"secondary\",\n    error: firstNameInvalid,\n    label: \"First Name\",\n    onChange: event => {\n      setFirstName(event.target.value);\n    },\n    onBlur: () => {\n      checkValidName(true, firstName);\n    },\n    helperText: firstNameInvalid ? \"Please enter a valid name.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"name\",\n    color: \"secondary\",\n    error: lastNameInvalid,\n    label: \"Last Name\",\n    onChange: event => {\n      setLastName(event.target.value);\n    },\n    onBlur: () => {\n      checkValidName(false, lastName);\n    },\n    helperText: lastNameInvalid ? \"Please enter a valid name.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"email\",\n    color: \"secondary\",\n    error: emailInvalid,\n    label: \"E-Mail\",\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    onBlur: () => {\n      checkValidEmail(email);\n    },\n    helperText: emailInvalid ? \"Please enter a valid email.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    multiline: true,\n    fullWidth: true,\n    color: \"secondary\",\n    label: \"Project References\",\n    onChange: () => {\n      console.log(\"project reg\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileUploadWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, \"Upload your CV and Cover Letter (max. 3 files)\"), /*#__PURE__*/React.createElement(FilePond, {\n    allowMultiple: true,\n    maxFiles: 3,\n    files: files,\n    onupdatefiles: fileInput => {\n      setFiles(fileInput.map(fileItem => fileItem.file));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      startWorkflow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/layout/ui/Forms/ApplicationForm.js"],"names":["React","useState","axios","FilePond","makeStyles","TextField","Button","Typography","nanologo","Response","useStyles","theme","root","breakpoints","up","inputWrapper","display","flexDirection","alignItems","margin","spacing","inputRow","width","justifyContent","input","marginTop","marginRight","buttonWrapper","fileUploadWrapper","title","fontWeight","lineHeight","textAlign","image","height","marginBottom","responseWrapper","backgroundColor","palette","primary","light","padding","borderRadius","ApplicationForm","props","classes","email","setEmail","firstName","setFirstName","lastName","setLastName","files","setFiles","sent","setSent","emailInvalid","setEmailInvalid","firstNameInvalid","setFirstNameInvalid","lastNameInvalid","setLastNameInvalid","checkValidName","isFirstName","name","regex","valid","test","length","checkValidEmail","console","log","String","toLowerCase","startWorkflow","event","target","value","fileInput","map","fileItem","file"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { FilePond } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\n\nimport nanologo from '../../../assets/logo/white-logo.png';\nimport Response from './Response';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n        },\n        [theme.breakpoints.up('md')]: {\n        }\n    },\n    inputWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            margin: theme.spacing(2)\n        }\n    },\n    inputRow: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }\n    },\n    input: {\n        width: '100%',\n        marginTop: theme.spacing(0.5),\n        '&:first-of-type': {\n            marginRight: theme.spacing(2)\n        }\n    },\n    buttonWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginRight: theme.spacing(2)\n        }\n    },\n    fileUploadWrapper: {\n        margin: theme.spacing(2)\n    },\n    title: {\n        fontWeight: 900,\n        lineHeight: 1,\n        textAlign: 'center'\n    },\n    image: {\n        height: '40px',\n        marginBottom: theme.spacing(1)\n    },\n    responseWrapper: {\n        margin: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: theme.palette.primary.light,\n        padding: theme.spacing(4),\n        borderRadius: theme.spacing(1)\n    }\n}))\n\nexport default function ApplicationForm(props) {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [files, setFiles] = useState([]);\n    const [sent, setSent] = useState(false);\n\n    const [emailInvalid, setEmailInvalid] = useState(false);\n    const [firstNameInvalid, setFirstNameInvalid] = useState(false);\n    const [lastNameInvalid, setLastNameInvalid] = useState(false);\n\n    const checkValidName = (isFirstName, name) => {\n        let regex = /^[a-zA-Z]+$/\n        let valid = regex.test(name) && name.length > 1;\n        if (isFirstName) {\n            valid ? setFirstNameInvalid(false) : setFirstNameInvalid(true)\n        }\n        if (!isFirstName) {\n            valid ? setLastNameInvalid(false) : setLastNameInvalid(true)\n        }\n        return !valid\n    }\n\n    const checkValidEmail = (email) => {\n        console.log(email)\n        let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        let valid = regex.test(String(email).toLowerCase());\n        console.log(valid)\n        valid ? setEmailInvalid(false) : setEmailInvalid(true)\n        return !valid;\n    }\n\n    const startWorkflow = () => {\n        if (!emailInvalid && !firstNameInvalid && !lastNameInvalid && files.length !== 0) {\n            console.log(\"Sent Application\")\n            setSent(true)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {\n                sent\n                    ?\n                    // <div className={classes.responseWrapper}>\n                    //     <img className={classes.image} src={nanologo}/>\n                    //     <Typography className={classes.title} variant=\"h4\">\n                            \n                    //     </Typography>\n                    //     <Typography variant=\"body1\">\n                    //         We will reach out to you as soon as possible.\n                    //     </Typography>\n                    // </div>\n                    <Response message=\"Thank you for your application\"/>\n                    :\n                    <div>\n                        <div className={classes.inputWrapper}>\n                            <div className={classes.inputRow}>\n                                <TextField\n                                    className={classes.input}\n                                    required\n                                    type=\"name\"\n                                    color=\"secondary\"\n                                    error={firstNameInvalid}\n                                    label=\"First Name\"\n                                    onChange={(event) => { setFirstName(event.target.value) }}\n                                    onBlur={() => { checkValidName(true, firstName) }}\n                                    helperText={firstNameInvalid ? \"Please enter a valid name.\" : \"\"}\n                                />\n                                <TextField\n                                    className={classes.input}\n                                    required\n                                    type=\"name\"\n                                    color=\"secondary\"\n                                    error={lastNameInvalid}\n                                    label=\"Last Name\"\n                                    onChange={(event) => { setLastName(event.target.value) }}\n                                    onBlur={() => { checkValidName(false, lastName) }}\n                                    helperText={lastNameInvalid ? \"Please enter a valid name.\" : \"\"}\n                                />\n                            </div>\n                            <TextField\n                                className={classes.input}\n                                required\n                                type=\"email\"\n                                color=\"secondary\"\n                                error={emailInvalid}\n                                label=\"E-Mail\"\n                                onChange={(event) => { setEmail(event.target.value) }}\n                                onBlur={() => { checkValidEmail(email) }}\n                                helperText={emailInvalid ? \"Please enter a valid email.\" : \"\"}\n                            />\n                            <TextField\n                                className={classes.input}\n                                multiline\n                                fullWidth\n                                color=\"secondary\"\n                                label=\"Project References\"\n                                onChange={() => { console.log(\"project reg\") }}\n                            />\n                        </div>\n                        <div className={classes.fileUploadWrapper}>\n                            <Typography gutterBottom color=\"textSecondary\" variant=\"body1\">\n                                Upload your CV and Cover Letter (max. 3 files)\n                </Typography>\n                            <FilePond\n                                allowMultiple={true}\n                                maxFiles={3}\n                                files={files}\n                                onupdatefiles={(fileInput) => { setFiles(fileInput.map(fileItem => fileItem.file)) }}\n                            />\n                        </div>\n                        <div className={classes.buttonWrapper}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={() => { startWorkflow() }}\n                            >\n                                Submit\n                </Button>\n                        </div>\n                    </div>\n            }\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}