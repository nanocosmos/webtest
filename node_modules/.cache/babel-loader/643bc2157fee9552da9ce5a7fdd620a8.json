{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/layout/ui/ActiveCampaign/H5LiveAutomation.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, FormControl, Select, MenuItem, InputLabel, FormHelperText } from '@material-ui/core';\nimport * as ac from '../../../utilities/acampaign-config';\nimport Response from '../Forms/Response';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {},\n    [theme.breakpoints.up('md')]: {},\n    '&$error': {\n      color: theme.palette.primary.main\n    }\n  },\n  error: {},\n  inputWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      margin: theme.spacing(2)\n    }\n  },\n  inputRow: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  },\n  input: {\n    width: '100%',\n    marginTop: theme.spacing(0.5),\n    '&:first-of-type': {\n      marginRight: theme.spacing(2)\n    }\n  },\n  buttonWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      marginRight: theme.spacing(2)\n    }\n  }\n}));\nexport default function H5LiveAutomation(props) {\n  const classes = useStyles();\n  const [activeCapmaignUrl] = useState(\"https://cors-anywhere.herokuapp.com/\" + ac.APIURL);\n  const [apiKey] = useState(ac.APIKEY);\n  const [headers] = useState({\n    headers: {\n      \"Api-Token\": apiKey\n    }\n  });\n  const [sent, setSent] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [customFields, setCustomFields] = useState({\n    [ac.USECASE.id]: [],\n    [ac.MESSAGE.id]: \"\"\n  });\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [firstNameInvalid, setFirstNameInvalid] = useState(false);\n  const [lastNameInvalid, setLastNameInvalid] = useState(false);\n\n  const checkValidName = (isFirstName, name) => {\n    let regex = /^[a-zA-Z]+$/;\n    let valid = regex.test(name) && name.length > 1;\n\n    if (isFirstName) {\n      valid ? setFirstNameInvalid(false) : setFirstNameInvalid(true);\n    }\n\n    if (!isFirstName) {\n      valid ? setLastNameInvalid(false) : setLastNameInvalid(true);\n    }\n\n    return !valid;\n  };\n\n  const checkValidEmail = email => {\n    console.log(email);\n    let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let valid = regex.test(String(email).toLowerCase());\n    console.log(valid);\n    valid ? setEmailInvalid(false) : setEmailInvalid(true);\n    return !valid;\n  };\n\n  const startWorkflow = () => {\n    if (!emailInvalid && !firstNameInvalid && !lastNameInvalid) {\n      createContact(firstName, lastName, email);\n      setSent(true);\n      props.sent();\n    }\n  };\n\n  const createContact = (firstname, lastname, email) => {\n    axios.post(`${activeCapmaignUrl}/contact/sync`, {\n      contact: {\n        email: email,\n        firstName: firstname,\n        lastName: lastname,\n        phone: \"\"\n      }\n    }, headers).then(response => {\n      let contactid = response.data.contact.id;\n      addToAutomation(contactid, ac.H5LIVE_DEMO);\n      postAllCustomFieldValues(contactid, customFields);\n    }).catch(error => {\n      console.log(\"Error in Creating\", error);\n    });\n  };\n\n  const addToAutomation = (contactid, automation) => {\n    axios.post(`${activeCapmaignUrl}/contactAutomations`, {\n      contactAutomation: {\n        contact: contactid,\n        automation: automation\n      }\n    }, headers).then(() => {}).catch(error => {\n      console.log(\"Error in Adding to Automation\", error);\n    });\n  };\n\n  const postAllCustomFieldValues = (contactId, customFields) => {\n    for (const [key, value] of Object.entries(customFields)) {\n      console.log(key, value);\n      axios.post(`${activeCapmaignUrl}/fieldValues`, {\n        fieldValue: {\n          contact: contactId,\n          field: key,\n          value: value\n        }\n      }, headers).then(() => {}).catch(error => {\n        console.log(\"[Error in sending the message]\", error);\n      });\n    }\n  };\n\n  const updateCustomFieldValue = (fieldId, value) => {\n    setCustomFields({ ...customFields,\n      [fieldId]: value\n    });\n  };\n\n  const appendSelectValue = event => {\n    let value = event.target.value;\n    const list = customFields[ac.USECASE.id];\n    if (list.includes(value)) list.splice(list.indexOf(value), 1);else list.push(value);\n    updateCustomFieldValue(ac.USECASE.id, value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"name\",\n    color: \"secondary\",\n    error: firstNameInvalid,\n    label: \"First Name\",\n    onChange: event => {\n      setFirstName(event.target.value);\n    },\n    onBlur: () => {\n      checkValidName(true, firstName);\n    },\n    helperText: firstNameInvalid ? \"Please enter a valid name.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"name\",\n    color: \"secondary\",\n    error: lastNameInvalid,\n    label: \"Last Name\",\n    onChange: event => {\n      setLastName(event.target.value);\n    },\n    onBlur: () => {\n      checkValidName(false, lastName);\n    },\n    helperText: lastNameInvalid ? \"Please enter a valid name.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    required: true,\n    type: \"email\",\n    color: \"secondary\",\n    error: emailInvalid,\n    label: \"E-Mail\",\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    onBlur: () => {\n      checkValidEmail(email);\n    },\n    helperText: emailInvalid ? \"Please enter a valid email.\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Usecase\"), /*#__PURE__*/React.createElement(Select, {\n    id: `${ac.USECASE.id}`,\n    autoWidth: true,\n    multiple: true,\n    value: customFields[ac.USECASE.id],\n    onChange: event => {\n      appendSelectValue(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, ac.USECASE.values.map((value, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: value.value,\n    key: `${value.id}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, value.value)))), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    multiline: true,\n    type: \"message\",\n    color: \"secondary\",\n    label: \"Message\",\n    onChange: event => {\n      updateCustomFieldValue(ac.MESSAGE.id, event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      startWorkflow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/layout/ui/ActiveCampaign/H5LiveAutomation.js"],"names":["React","useState","useEffect","useRef","axios","makeStyles","TextField","Button","FormControl","Select","MenuItem","InputLabel","FormHelperText","ac","Response","useStyles","theme","root","breakpoints","up","color","palette","primary","main","error","inputWrapper","display","flexDirection","alignItems","margin","spacing","inputRow","width","justifyContent","input","marginTop","marginRight","buttonWrapper","H5LiveAutomation","props","classes","activeCapmaignUrl","APIURL","apiKey","APIKEY","headers","sent","setSent","email","setEmail","firstName","setFirstName","lastName","setLastName","customFields","setCustomFields","USECASE","id","MESSAGE","emailInvalid","setEmailInvalid","firstNameInvalid","setFirstNameInvalid","lastNameInvalid","setLastNameInvalid","checkValidName","isFirstName","name","regex","valid","test","length","checkValidEmail","console","log","String","toLowerCase","startWorkflow","createContact","firstname","lastname","post","contact","phone","then","response","contactid","data","addToAutomation","H5LIVE_DEMO","postAllCustomFieldValues","catch","automation","contactAutomation","contactId","key","value","Object","entries","fieldValue","field","updateCustomFieldValue","fieldId","appendSelectValue","event","target","list","includes","splice","indexOf","push","values","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,WAA5B,EAAyCC,MAAzC,EAAiDC,QAAjD,EAA2DC,UAA3D,EAAuEC,cAAvE,QAA6F,mBAA7F;AAEA,OAAO,KAAKC,EAAZ,MAAoB,qCAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,KAACD,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B,EAD5B;AAGF,KAACH,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B,EAH5B;AAKF,eAAW;AACPC,MAAAA,KAAK,EAAEJ,KAAK,CAACK,OAAN,CAAcC,OAAd,CAAsBC;AADtB;AALT,GAD+B;AAUrCC,EAAAA,KAAK,EAAE,EAV8B;AAWrCC,EAAAA,YAAY,EAAE;AACV,KAACT,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BO,MAAAA,OAAO,EAAE,MADiB;AAE1BC,MAAAA,aAAa,EAAE,QAFW;AAG1BC,MAAAA,UAAU,EAAE,QAHc;AAI1BC,MAAAA,MAAM,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd;AAJkB;AADpB,GAXuB;AAmBrCC,EAAAA,QAAQ,EAAE;AACN,KAACf,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BO,MAAAA,OAAO,EAAE,MADiB;AAE1BC,MAAAA,aAAa,EAAE,KAFW;AAG1BK,MAAAA,KAAK,EAAE,MAHmB;AAI1BC,MAAAA,cAAc,EAAE,QAJU;AAK1BL,MAAAA,UAAU,EAAE;AALc;AADxB,GAnB2B;AA4BrCM,EAAAA,KAAK,EAAE;AACHF,IAAAA,KAAK,EAAE,MADJ;AAEHG,IAAAA,SAAS,EAAEnB,KAAK,CAACc,OAAN,CAAc,GAAd,CAFR;AAGH,uBAAmB;AACfM,MAAAA,WAAW,EAAEpB,KAAK,CAACc,OAAN,CAAc,CAAd;AADE;AAHhB,GA5B8B;AAmCrCO,EAAAA,aAAa,EAAE;AACX,KAACrB,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BO,MAAAA,OAAO,EAAE,MADiB;AAE1BC,MAAAA,aAAa,EAAE,KAFW;AAG1BM,MAAAA,cAAc,EAAE,UAHU;AAI1BG,MAAAA,WAAW,EAAEpB,KAAK,CAACc,OAAN,CAAc,CAAd;AAJa;AADnB;AAnCsB,CAAZ,CAAD,CAA5B;AA6CA,eAAe,SAASQ,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AAEA,QAAM,CAAC0B,iBAAD,IAAsBxC,QAAQ,CAAC,yCAAyCY,EAAE,CAAC6B,MAA7C,CAApC;AACA,QAAM,CAACC,MAAD,IAAW1C,QAAQ,CAACY,EAAE,CAAC+B,MAAJ,CAAzB;AACA,QAAM,CAACC,OAAD,IAAY5C,QAAQ,CAAC;AACvB4C,IAAAA,OAAO,EAAE;AACL,mBAAaF;AADR;AADc,GAAD,CAA1B;AAMA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB9C,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC+C,KAAD,EAAQC,QAAR,IAAoBhD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiD,SAAD,EAAYC,YAAZ,IAA4BlD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmD,QAAD,EAAWC,WAAX,IAA0BpD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqD,YAAD,EAAeC,eAAf,IAAkCtD,QAAQ,CAAC;AAC7C,KAACY,EAAE,CAAC2C,OAAH,CAAWC,EAAZ,GAAiB,EAD4B;AAE7C,KAAC5C,EAAE,CAAC6C,OAAH,CAAWD,EAAZ,GAAiB;AAF4B,GAAD,CAAhD;AAKA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkC3D,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC4D,gBAAD,EAAmBC,mBAAnB,IAA0C7D,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAC8D,eAAD,EAAkBC,kBAAlB,IAAwC/D,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMgE,cAAc,GAAG,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC1C,QAAIC,KAAK,GAAG,aAAZ;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWH,IAAX,KAAoBA,IAAI,CAACI,MAAL,GAAc,CAA9C;;AACA,QAAIL,WAAJ,EAAiB;AACbG,MAAAA,KAAK,GAAGP,mBAAmB,CAAC,KAAD,CAAtB,GAAgCA,mBAAmB,CAAC,IAAD,CAAxD;AACH;;AACD,QAAI,CAACI,WAAL,EAAkB;AACdG,MAAAA,KAAK,GAAGL,kBAAkB,CAAC,KAAD,CAArB,GAA+BA,kBAAkB,CAAC,IAAD,CAAtD;AACH;;AACD,WAAO,CAACK,KAAR;AACH,GAVD;;AAYA,QAAMG,eAAe,GAAIxB,KAAD,IAAW;AAC/ByB,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ;AACA,QAAIoB,KAAK,GAAG,yJAAZ;AACA,QAAIC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWK,MAAM,CAAC3B,KAAD,CAAN,CAAc4B,WAAd,EAAX,CAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAA,IAAAA,KAAK,GAAGT,eAAe,CAAC,KAAD,CAAlB,GAA4BA,eAAe,CAAC,IAAD,CAAhD;AACA,WAAO,CAACS,KAAR;AACH,GAPD;;AASA,QAAMQ,aAAa,GAAG,MAAM;AACxB,QAAI,CAAClB,YAAD,IAAiB,CAACE,gBAAlB,IAAsC,CAACE,eAA3C,EAA4D;AACxDe,MAAAA,aAAa,CAAC5B,SAAD,EAAYE,QAAZ,EAAsBJ,KAAtB,CAAb;AACAD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAR,MAAAA,KAAK,CAACO,IAAN;AACH;AACJ,GAND;;AAQA,QAAMgC,aAAa,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBhC,KAAtB,KAAgC;AAClD5C,IAAAA,KAAK,CAAC6E,IAAN,CAAY,GAAExC,iBAAkB,eAAhC,EAAgD;AAC5CyC,MAAAA,OAAO,EAAE;AACLlC,QAAAA,KAAK,EAAEA,KADF;AAELE,QAAAA,SAAS,EAAE6B,SAFN;AAGL3B,QAAAA,QAAQ,EAAE4B,QAHL;AAILG,QAAAA,KAAK,EAAE;AAJF;AADmC,KAAhD,EAOGtC,OAPH,EAOYuC,IAPZ,CAOkBC,QAAD,IAAc;AAC3B,UAAIC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsBzB,EAAtC;AACA+B,MAAAA,eAAe,CAACF,SAAD,EAAYzE,EAAE,CAAC4E,WAAf,CAAf;AACAC,MAAAA,wBAAwB,CAACJ,SAAD,EAAYhC,YAAZ,CAAxB;AACH,KAXD,EAWGqC,KAXH,CAWUnE,KAAD,IAAW;AAChBiD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiClD,KAAjC;AACH,KAbD;AAcH,GAfD;;AAiBA,QAAMgE,eAAe,GAAG,CAACF,SAAD,EAAYM,UAAZ,KAA2B;AAC/CxF,IAAAA,KAAK,CAAC6E,IAAN,CAAY,GAAExC,iBAAkB,qBAAhC,EAAsD;AAClDoD,MAAAA,iBAAiB,EAAE;AACfX,QAAAA,OAAO,EAAEI,SADM;AAEfM,QAAAA,UAAU,EAAEA;AAFG;AAD+B,KAAtD,EAKG/C,OALH,EAMKuC,IANL,CAMU,MAAM,CAAG,CANnB,EAOKO,KAPL,CAOYnE,KAAD,IAAW;AACdiD,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6ClD,KAA7C;AACH,KATL;AAUH,GAXD;;AAaA,QAAMkE,wBAAwB,GAAG,CAACI,SAAD,EAAYxC,YAAZ,KAA6B;AAC1D,SAAK,MAAM,CAACyC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAe5C,YAAf,CAA3B,EAAyD;AACrDmB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ,EAAiBC,KAAjB;AACA5F,MAAAA,KAAK,CAAC6E,IAAN,CAAY,GAAExC,iBAAkB,cAAhC,EAA+C;AAC3C0D,QAAAA,UAAU,EAAE;AACRjB,UAAAA,OAAO,EAAEY,SADD;AAERM,UAAAA,KAAK,EAAEL,GAFC;AAGRC,UAAAA,KAAK,EAAEA;AAHC;AAD+B,OAA/C,EAMGnD,OANH,EAOKuC,IAPL,CAOU,MAAM,CAAG,CAPnB,EAQKO,KARL,CAQYnE,KAAD,IAAW;AAAEiD,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8ClD,KAA9C;AAAsD,OAR9E;AASH;AACJ,GAbD;;AAeA,QAAM6E,sBAAsB,GAAG,CAACC,OAAD,EAAUN,KAAV,KAAoB;AAC/CzC,IAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZ,OAACgD,OAAD,GAAWN;AAFC,KAAD,CAAf;AAIH,GALD;;AAOA,QAAMO,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAIR,KAAK,GAAGQ,KAAK,CAACC,MAAN,CAAaT,KAAzB;AACA,UAAMU,IAAI,GAAGpD,YAAY,CAACzC,EAAE,CAAC2C,OAAH,CAAWC,EAAZ,CAAzB;AAEA,QAAIiD,IAAI,CAACC,QAAL,CAAcX,KAAd,CAAJ,EAA0BU,IAAI,CAACE,MAAL,CAAYF,IAAI,CAACG,OAAL,CAAab,KAAb,CAAZ,EAAiC,CAAjC,EAA1B,KACKU,IAAI,CAACI,IAAL,CAAUd,KAAV;AAELK,IAAAA,sBAAsB,CAACxF,EAAE,CAAC2C,OAAH,CAAWC,EAAZ,EAAgBuC,KAAhB,CAAtB;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAExD,OAAO,CAACvB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAACf,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEe,OAAO,CAACT,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAES,OAAO,CAACN,KADvB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,KAAK,EAAE2B,gBALX;AAMI,IAAA,KAAK,EAAC,YANV;AAOI,IAAA,QAAQ,EAAG2C,KAAD,IAAW;AAAErD,MAAAA,YAAY,CAACqD,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAZ;AAAkC,KAP7D;AAQI,IAAA,MAAM,EAAE,MAAM;AAAE/B,MAAAA,cAAc,CAAC,IAAD,EAAOf,SAAP,CAAd;AAAiC,KARrD;AASI,IAAA,UAAU,EAAEW,gBAAgB,GAAG,4BAAH,GAAkC,EATlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAYI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAErB,OAAO,CAACN,KADvB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,KAAK,EAAE6B,eALX;AAMI,IAAA,KAAK,EAAC,WANV;AAOI,IAAA,QAAQ,EAAGyC,KAAD,IAAW;AAAEnD,MAAAA,WAAW,CAACmD,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAX;AAAiC,KAP5D;AAQI,IAAA,MAAM,EAAE,MAAM;AAAE/B,MAAAA,cAAc,CAAC,KAAD,EAAQb,QAAR,CAAd;AAAiC,KARrD;AASI,IAAA,UAAU,EAAEW,eAAe,GAAG,4BAAH,GAAkC,EATjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,eAyBI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEvB,OAAO,CAACN,KADvB;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,KAAK,EAAEyB,YALX;AAMI,IAAA,KAAK,EAAC,QANV;AAOI,IAAA,QAAQ,EAAG6C,KAAD,IAAW;AAAEvD,MAAAA,QAAQ,CAACuD,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAR;AAA8B,KAPzD;AAQI,IAAA,MAAM,EAAE,MAAM;AAAExB,MAAAA,eAAe,CAACxB,KAAD,CAAf;AAAwB,KAR5C;AASI,IAAA,UAAU,EAAEW,YAAY,GAAG,6BAAH,GAAmC,EAT/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eAoCI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEnB,OAAO,CAACN,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,MAAD;AACI,IAAA,EAAE,EAAG,GAAErB,EAAE,CAAC2C,OAAH,CAAWC,EAAG,EADzB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,QAAQ,MAHZ;AAII,IAAA,KAAK,EAAEH,YAAY,CAACzC,EAAE,CAAC2C,OAAH,CAAWC,EAAZ,CAJvB;AAKI,IAAA,QAAQ,EAAG+C,KAAD,IAAW;AAAED,MAAAA,iBAAiB,CAACC,KAAD,CAAjB;AAA0B,KALrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQ3F,EAAE,CAAC2C,OAAH,CAAWuD,MAAX,CAAkBC,GAAlB,CAAsB,CAAChB,KAAD,EAAQiB,KAAR,kBAClB,oBAAC,QAAD;AACI,IAAA,KAAK,EAAEjB,KAAK,CAACA,KADjB;AAEI,IAAA,GAAG,EAAG,GAAEA,KAAK,CAACvC,EAAG,IAAGwD,KAAM,EAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKjB,KAAK,CAACA,KAJX,CADJ,CARR,CAFJ,CApCJ,eAyDI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAExD,OAAO,CAACN,KADvB;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,KAAK,EAAC,WAJV;AAKI,IAAA,KAAK,EAAC,SALV;AAMI,IAAA,QAAQ,EAAGsE,KAAD,IAAW;AAAEH,MAAAA,sBAAsB,CAACxF,EAAE,CAAC6C,OAAH,CAAWD,EAAZ,EAAgB+C,KAAK,CAACC,MAAN,CAAaT,KAA7B,CAAtB;AAA2D,KANtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDJ,CADJ,eAmEI;AAAK,IAAA,SAAS,EAAExD,OAAO,CAACH,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,OAAO,EAAE,MAAM;AAAEwC,MAAAA,aAAa;AAAI,KAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAnEJ,CADJ,CADJ;AAiFH","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, FormControl, Select, MenuItem, InputLabel, FormHelperText } from '@material-ui/core';\n\nimport * as ac from '../../../utilities/acampaign-config';\nimport Response from '../Forms/Response';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n        },\n        [theme.breakpoints.up('md')]: {\n        },\n        '&$error': {\n            color: theme.palette.primary.main\n        }\n    },\n    error: {},\n    inputWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            margin: theme.spacing(2)\n        }\n    },\n    inputRow: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }\n    },\n    input: {\n        width: '100%',\n        marginTop: theme.spacing(0.5),\n        '&:first-of-type': {\n            marginRight: theme.spacing(2)\n        }\n    },\n    buttonWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n            marginRight: theme.spacing(2)\n        }\n    }\n}))\n\nexport default function H5LiveAutomation(props) {\n    const classes = useStyles();\n\n    const [activeCapmaignUrl] = useState(\"https://cors-anywhere.herokuapp.com/\" + ac.APIURL);\n    const [apiKey] = useState(ac.APIKEY);\n    const [headers] = useState({\n        headers: {\n            \"Api-Token\": apiKey\n        }\n    })\n\n    const [sent, setSent] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [customFields, setCustomFields] = useState({\n        [ac.USECASE.id]: [],\n        [ac.MESSAGE.id]: \"\"\n    })\n\n    const [emailInvalid, setEmailInvalid] = useState(false);\n    const [firstNameInvalid, setFirstNameInvalid] = useState(false);\n    const [lastNameInvalid, setLastNameInvalid] = useState(false);\n\n    const checkValidName = (isFirstName, name) => {\n        let regex = /^[a-zA-Z]+$/\n        let valid = regex.test(name) && name.length > 1;\n        if (isFirstName) {\n            valid ? setFirstNameInvalid(false) : setFirstNameInvalid(true)\n        }\n        if (!isFirstName) {\n            valid ? setLastNameInvalid(false) : setLastNameInvalid(true)\n        }\n        return !valid\n    }\n\n    const checkValidEmail = (email) => {\n        console.log(email)\n        let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        let valid = regex.test(String(email).toLowerCase());\n        console.log(valid)\n        valid ? setEmailInvalid(false) : setEmailInvalid(true)\n        return !valid;\n    }\n\n    const startWorkflow = () => {\n        if (!emailInvalid && !firstNameInvalid && !lastNameInvalid) {\n            createContact(firstName, lastName, email);\n            setSent(true)\n            props.sent();\n        }\n    }\n\n    const createContact = (firstname, lastname, email) => {\n        axios.post(`${activeCapmaignUrl}/contact/sync`, {\n            contact: {\n                email: email,\n                firstName: firstname,\n                lastName: lastname,\n                phone: \"\"\n            }\n        }, headers).then((response) => {\n            let contactid = response.data.contact.id;\n            addToAutomation(contactid, ac.H5LIVE_DEMO);\n            postAllCustomFieldValues(contactid, customFields)\n        }).catch((error) => {\n            console.log(\"Error in Creating\", error)\n        })\n    }\n\n    const addToAutomation = (contactid, automation) => {\n        axios.post(`${activeCapmaignUrl}/contactAutomations`, {\n            contactAutomation: {\n                contact: contactid,\n                automation: automation\n            }\n        }, headers)\n            .then(() => { })\n            .catch((error) => {\n                console.log(\"Error in Adding to Automation\", error)\n            })\n    }\n\n    const postAllCustomFieldValues = (contactId, customFields) => {\n        for (const [key, value] of Object.entries(customFields)) {\n            console.log(key, value)\n            axios.post(`${activeCapmaignUrl}/fieldValues`, {\n                fieldValue: {\n                    contact: contactId,\n                    field: key,\n                    value: value\n                }\n            }, headers)\n                .then(() => { })\n                .catch((error) => { console.log(\"[Error in sending the message]\", error) })\n        }\n    }\n\n    const updateCustomFieldValue = (fieldId, value) => {\n        setCustomFields({\n            ...customFields,\n            [fieldId]: value\n        });\n    }\n\n    const appendSelectValue = (event) => {\n        let value = event.target.value\n        const list = customFields[ac.USECASE.id];\n\n        if (list.includes(value)) list.splice(list.indexOf(value), 1)\n        else list.push(value)\n\n        updateCustomFieldValue(ac.USECASE.id, value)\n    }\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <div className={classes.inputWrapper}>\n                    <div className={classes.inputRow}>\n                        <TextField\n                            className={classes.input}\n                            required\n                            type=\"name\"\n                            color=\"secondary\"\n                            error={firstNameInvalid}\n                            label=\"First Name\"\n                            onChange={(event) => { setFirstName(event.target.value) }}\n                            onBlur={() => { checkValidName(true, firstName) }}\n                            helperText={firstNameInvalid ? \"Please enter a valid name.\" : \"\"}\n                        />\n                        <TextField\n                            className={classes.input}\n                            required\n                            type=\"name\"\n                            color=\"secondary\"\n                            error={lastNameInvalid}\n                            label=\"Last Name\"\n                            onChange={(event) => { setLastName(event.target.value) }}\n                            onBlur={() => { checkValidName(false, lastName) }}\n                            helperText={lastNameInvalid ? \"Please enter a valid name.\" : \"\"}\n                        />\n                    </div>\n                    <TextField\n                        className={classes.input}\n                        required\n                        type=\"email\"\n                        color=\"secondary\"\n                        error={emailInvalid}\n                        label=\"E-Mail\"\n                        onChange={(event) => { setEmail(event.target.value) }}\n                        onBlur={() => { checkValidEmail(email) }}\n                        helperText={emailInvalid ? \"Please enter a valid email.\" : \"\"}\n                    />\n                    <FormControl className={classes.input}>\n                        <InputLabel>Usecase</InputLabel>\n                        <Select\n                            id={`${ac.USECASE.id}`}\n                            autoWidth\n                            multiple\n                            value={customFields[ac.USECASE.id]}\n                            onChange={(event) => { appendSelectValue(event) }}\n                        >\n                            {\n                                ac.USECASE.values.map((value, index) =>\n                                    <MenuItem\n                                        value={value.value}\n                                        key={`${value.id}-${index}`}\n                                    >\n                                        {value.value}\n                                    </MenuItem>\n                                )\n                            }\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        className={classes.input}\n                        multiline\n                        type=\"message\"\n                        color=\"secondary\"\n                        label=\"Message\"\n                        onChange={(event) => { updateCustomFieldValue(ac.MESSAGE.id, event.target.value) }}\n                    />\n                </div>\n                <div className={classes.buttonWrapper}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => { startWorkflow() }}\n                    >\n                        Submit\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}