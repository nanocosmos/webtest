{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/LandingPage/components/Faq.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport * as link from '../../../utilities/link-config';\nimport world from '../../../assets/collagen/orange-cdn.png';\nimport Question from '../../../layout/ui/Questions';\nimport HeaderWrapper from '../../../layout/withStyles/Header/Wrapper';\nimport BoldTitle from '../../../layout/withStyles/Header/BoldTitle';\nimport Overline from '../../../layout/withStyles/Header/Overline';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {\n      margin: 0,\n      flexGrow: 1,\n      backgroundColor: theme.palette.common.white,\n      color: theme.palette.secondary.main\n    }\n  },\n  container: {\n    [theme.breakpoints.up('xs')]: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  },\n  contentWrapper: {\n    [theme.breakpoints.up('xs')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row'\n    }\n  },\n  item: {\n    [theme.breakpoints.up('xs')]: {\n      padding: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    }\n  },\n  image: {\n    [theme.breakpoints.up('xs')]: {\n      width: '90%',\n      display: 'block',\n      margin: '0 auto'\n    }\n  }\n}));\nexport default function Faq() {\n  const classes = useStyles();\n  let questions = [{\n    text: \"What is interactive live streaming?\",\n    link: link.BLOG_INTERACTIVE_STREAMING\n  }, {\n    text: \"Getting insights in your live streams for improved QoS\",\n    link: link.BLOG_ANALYTICS\n  }, {\n    text: \"Setting up your nanoStream Cloud Account\",\n    link: link.BLOG_SETTING_UP_NANOCLOUD\n  }, {\n    text: \"Documentation and developer information\",\n    link: link.DOCS\n  }, {\n    text: \"Videos and Tutorials\",\n    link: link.PAGE_VIDEOS\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HeaderWrapper, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Overline, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Don't know where to start?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), \"Check the links below to learn more about ultra-low latency live streaming\"), /*#__PURE__*/React.createElement(BoldTitle, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Start live streaming worldwide\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    src: world,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.item,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, questions.map((question, index) => /*#__PURE__*/React.createElement(Question, {\n    key: `${question.text}-${index}`,\n    text: question.text,\n    link: question.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/LandingPage/components/Faq.js"],"names":["React","makeStyles","Grid","link","world","Question","HeaderWrapper","BoldTitle","Overline","useStyles","theme","root","breakpoints","up","margin","flexGrow","backgroundColor","palette","common","white","color","secondary","main","container","padding","spacing","display","flexDirection","alignItems","contentWrapper","item","justifyContent","image","width","Faq","classes","questions","text","BLOG_INTERACTIVE_STREAMING","BLOG_ANALYTICS","BLOG_SETTING_UP_NANOCLOUD","DOCS","PAGE_VIDEOS","map","question","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport * as link from '../../../utilities/link-config';\n\nimport world from '../../../assets/collagen/orange-cdn.png';\nimport Question from '../../../layout/ui/Questions';\n\nimport HeaderWrapper from '../../../layout/withStyles/Header/Wrapper';\nimport BoldTitle from '../../../layout/withStyles/Header/BoldTitle';\nimport Overline from '../../../layout/withStyles/Header/Overline';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {\n            margin: 0,\n            flexGrow: 1,\n            backgroundColor: theme.palette.common.white,\n            color: theme.palette.secondary.main\n        }\n    },\n    container: {\n        [theme.breakpoints.up('xs')]: {\n            padding: theme.spacing(2),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }\n    },\n    contentWrapper: {\n        [theme.breakpoints.up('xs')]: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n        [theme.breakpoints.up('md')]: {\n            flexDirection: 'row'\n        }\n    },\n    item: {\n        [theme.breakpoints.up('xs')]: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n        }\n    },\n    image: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            display: 'block',\n            margin: '0 auto'\n        }\n    }\n}))\n\nexport default function Faq() {\n    const classes = useStyles();\n    let questions = [\n        { text: \"What is interactive live streaming?\", link: link.BLOG_INTERACTIVE_STREAMING },\n        { text: \"Getting insights in your live streams for improved QoS\", link: link.BLOG_ANALYTICS },\n        { text: \"Setting up your nanoStream Cloud Account\", link: link.BLOG_SETTING_UP_NANOCLOUD },\n        { text: \"Documentation and developer information\", link: link.DOCS },\n        { text: \"Videos and Tutorials\", link: link.PAGE_VIDEOS }\n    ]\n\n    return (\n        <div className={classes.root}>\n            <Grid container className={classes.container}>\n                <Grid className={classes.item} item xs={12}>\n                    <HeaderWrapper align=\"center\">\n                        <Overline color=\"secondary\">\n                            Don't know where to start?\n                            <br />\n                            Check the links below to learn more about ultra-low latency live streaming\n                        </Overline>\n                        <BoldTitle color=\"secondary\">\n                            Start live streaming worldwide\n                        </BoldTitle>\n                    </HeaderWrapper>\n                </Grid>\n                <div className={classes.contentWrapper}>\n                    <Grid item xs={12}>\n                        <img className={classes.image} src={world} />\n                    </Grid>\n                    <Grid item className={classes.item} xs={12}>\n                        {\n                            questions.map((question, index) => (\n                                <Question key={`${question.text}-${index}`} text={question.text} link={question.link} />\n                            ))\n                        }\n                    </Grid>\n                </div>\n            </Grid>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}