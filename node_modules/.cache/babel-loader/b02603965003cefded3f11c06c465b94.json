{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/src/content/usecases/components/Blog.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport * as link from '../../../utilities/link-config';\nimport MarkdownPanel from '../../../layout/ui/MarkdownPanel';\nimport Overline from '../../../layout/withStyles/Header/Overline';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4),\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.primary.main\n  },\n  // TEXT STYLES\n  wrapper: {\n    [theme.breakpoints.up('xs')]: {\n      margin: theme.spacing(4),\n      width: '95%',\n      display: 'block',\n      margin: '0 auto'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '75%'\n    },\n    [theme.breakpoints.up('md')]: {\n      marginTop: 0,\n      width: '60%'\n    },\n    '&:first-of-type': {\n      marginBottom: theme.spacing(2)\n    }\n  },\n  headerText: {\n    fontWeight: 300,\n    color: theme.palette.secondary.marginTop,\n    lineHeight: 1,\n    [theme.breakpoints.up('md')]: {\n      fontSize: '1.4rem',\n      maxWidth: '700px'\n    }\n  },\n  overline: {\n    fontWeight: 600,\n    lineHeight: 1,\n    color: theme.palette.secondary.main\n  },\n  bold: {\n    fontWeight: '900'\n  },\n  expansionPanelContentWrapper: {},\n  linkWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Blog() {\n  const classes = useStyles();\n  let [usecases, setUsecases] = useState([]);\n\n  const fetchUsecases = () => {\n    axios.get(`${link.STRAPI_BASE}/usecases`).then(response => {\n      setUsecases(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    fetchUsecases();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Overline, {\n    color: \"secondary\",\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"a selection of our partners and customers in diffrent industries and busines sectors\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"nanoStream Cloud\"), \" end-to-end live streaming solutions for a variety of usecacses\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, usecases.map((usecase, index) => /*#__PURE__*/React.createElement(MarkdownPanel, {\n    key: `${usecase.title}-${index}`,\n    title: usecase.title,\n    content: usecase.content,\n    suffix: usecase.urlSuffix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/src/content/usecases/components/Blog.js"],"names":["React","useState","useEffect","axios","makeStyles","Typography","link","MarkdownPanel","Overline","useStyles","theme","root","padding","spacing","backgroundColor","palette","common","white","color","primary","main","wrapper","breakpoints","up","margin","width","display","marginTop","marginBottom","headerText","fontWeight","secondary","lineHeight","fontSize","maxWidth","overline","bold","expansionPanelContentWrapper","linkWrapper","flexDirection","justifyContent","Blog","classes","usecases","setUsecases","fetchUsecases","get","STRAPI_BASE","then","response","data","catch","error","console","log","map","usecase","index","title","content","urlSuffix"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport * as link from '../../../utilities/link-config';\n\nimport MarkdownPanel from '../../../layout/ui/MarkdownPanel';\nimport Overline from '../../../layout/withStyles/Header/Overline';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(4),\n        backgroundColor: theme.palette.common.white,\n        color: theme.palette.primary.main, \n    },\n    // TEXT STYLES\n    wrapper: {\n        [theme.breakpoints.up('xs')]: {\n            margin: theme.spacing(4),\n            width: '95%',\n            display: 'block',\n            margin: '0 auto',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '75%'\n        },\n        [theme.breakpoints.up('md')]: {\n            marginTop: 0,\n            width: '60%'\n        },\n        '&:first-of-type': {\n            marginBottom: theme.spacing(2)\n        }\n    },\n    headerText: {\n        fontWeight: 300,\n        color: theme.palette.secondary.marginTop,\n        lineHeight: 1,\n        [theme.breakpoints.up('md')]: {\n            fontSize: '1.4rem',\n            maxWidth: '700px',\n        },\n    },\n    overline: {\n        fontWeight: 600,\n        lineHeight: 1,\n        color: theme.palette.secondary.main\n    },\n    bold: {\n        fontWeight: '900',\n    },\n    expansionPanelContentWrapper: {\n    },\n    linkWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        marginTop: theme.spacing(1)\n    }\n}))\n\nexport default function Blog() {\n    const classes = useStyles();\n    let [usecases, setUsecases] = useState([]);\n\n    const fetchUsecases = () => {\n        axios.get(`${link.STRAPI_BASE}/usecases`)\n        .then((response) => {\n            setUsecases(response.data)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n    }\n\n    useEffect(() => {\n        fetchUsecases();\n    }, [])\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                <Overline color=\"secondary\" variant=\"button\">\n                    a selection of our partners and customers in diffrent industries and busines sectors\n                </Overline>\n                <Typography variant=\"h6\" className={classes.headerText}>\n                    <span className={classes.bold}>nanoStream Cloud</span> end-to-end live streaming solutions for a variety of usecacses\n                </Typography>\n            </div>\n            <div className={classes.wrapper}>\n                {\n                    usecases.map((usecase, index) => (\n                        <MarkdownPanel key={`${usecase.title}-${index}`} title={usecase.title} content={usecase.content} suffix={usecase.urlSuffix}/>\n                    ))\n                }\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}