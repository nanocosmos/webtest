{"ast":null,"code":"export default (async (req, res) => {\n  // Check the secret and next parameters\n  // This secret should only be known to this API route and the CMS\n  if (req.query.secret !== 'MY_SECRET_TOKEN' || !req.query.slug) {\n    return res.status(401).json({\n      message: 'Invalid token'\n    });\n  } // Fetch the headless CMS to check if the provided `slug` exists\n  // getPostBySlug would implement the required fetching logic to the headless CMS\n\n\n  const slug = await getPostBySlug(req.query.slug); // If the slug doesn't exist prevent preview mode from being enabled\n\n  if (!slug) {\n    return res.status(401).json({\n      message: 'Invalid slug'\n    });\n  } // Enable Preview Mode by setting the cookies\n\n\n  res.setPreviewData({}); // Redirect to the path from the fetched post\n  // We don't redirect to req.query.slug as that might lead to open redirect vulnerabilities\n\n  res.writeHead(307, {\n    Location: slug.slug\n  });\n  res.end();\n});","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/pages/preview.js"],"names":["req","res","query","secret","slug","status","json","message","getPostBySlug","setPreviewData","writeHead","Location","end"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AAC/B;AACA;AACA,MAAID,GAAG,CAACE,KAAJ,CAAUC,MAAV,KAAqB,iBAArB,IAA0C,CAACH,GAAG,CAACE,KAAJ,CAAUE,IAAzD,EAA+D;AAC7D,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD,GAL8B,CAO/B;AACA;;;AACA,QAAMH,IAAI,GAAG,MAAMI,aAAa,CAACR,GAAG,CAACE,KAAJ,CAAUE,IAAX,CAAhC,CAT+B,CAW/B;;AACA,MAAI,CAACA,IAAL,EAAW;AACT,WAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD,GAd8B,CAgB/B;;;AACAN,EAAAA,GAAG,CAACQ,cAAJ,CAAmB,EAAnB,EAjB+B,CAmB/B;AACA;;AACAR,EAAAA,GAAG,CAACS,SAAJ,CAAc,GAAd,EAAmB;AAAEC,IAAAA,QAAQ,EAAEP,IAAI,CAACA;AAAjB,GAAnB;AACAH,EAAAA,GAAG,CAACW,GAAJ;AACD,CAvBH","sourcesContent":["export default async (req, res) => {\n    // Check the secret and next parameters\n    // This secret should only be known to this API route and the CMS\n    if (req.query.secret !== 'MY_SECRET_TOKEN' || !req.query.slug) {\n      return res.status(401).json({ message: 'Invalid token' })\n    }\n  \n    // Fetch the headless CMS to check if the provided `slug` exists\n    // getPostBySlug would implement the required fetching logic to the headless CMS\n    const slug = await getPostBySlug(req.query.slug)\n  \n    // If the slug doesn't exist prevent preview mode from being enabled\n    if (!slug) {\n      return res.status(401).json({ message: 'Invalid slug' })\n    }\n  \n    // Enable Preview Mode by setting the cookies\n    res.setPreviewData({})\n  \n    // Redirect to the path from the fetched post\n    // We don't redirect to req.query.slug as that might lead to open redirect vulnerabilities\n    res.writeHead(307, { Location: slug.slug })\n    res.end()\n  }"]},"metadata":{},"sourceType":"module"}