{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var slug;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(req.query.secret !== 'MY_SECRET_TOKEN' || !req.query.slug)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(401).json({\n              message: 'Invalid token'\n            }));\n\n          case 2:\n            _context.next = 4;\n            return getPostBySlug(req.query.slug);\n\n          case 4:\n            slug = _context.sent;\n\n            if (slug) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(401).json({\n              message: 'Invalid slug'\n            }));\n\n          case 7:\n            // Enable Preview Mode by setting the cookies\n            res.setPreviewData({}); // Redirect to the path from the fetched post\n            // We don't redirect to req.query.slug as that might lead to open redirect vulnerabilities\n\n            res.writeHead(307, {\n              Location: slug.slug\n            });\n            res.end();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":null,"metadata":{},"sourceType":"module"}