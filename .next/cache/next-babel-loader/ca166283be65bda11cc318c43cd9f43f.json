{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/components/content/blog/Preview.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Router from 'next/router';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, CardActions, Button } from '@material-ui/core';\nimport { ArrowRightAlt } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab';\nimport { generateBlogPostDate } from '../../../utilities/helper-methods';\nimport * as link from '../../../utilities/link-config';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 'auto',\n    height: '100%'\n  },\n  contentWrapper: {},\n  media: {\n    [theme.breakpoints.up('xs')]: {\n      height: 190\n    }\n  },\n  tag: {\n    padding: theme.spacing(0.5, 1, 0.5, 1),\n    color: theme.palette.common.white\n  },\n  tagWrapper: {\n    cursor: 'pointer',\n    backgroundColor: theme.palette.primary.main,\n    display: 'inline-block',\n    marginRight: theme.spacing(0.5),\n    marginTop: theme.spacing(0.5),\n    borderRadius: theme.spacing(0.5)\n  },\n  title: {\n    marginTop: theme.spacing(1),\n    fontWeight: 700,\n    color: theme.palette.primary.light,\n    lineHeight: 1\n  },\n  buttonWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  }\n}));\nexport default function Preview(props) {\n  _s();\n\n  const classes = useStyles();\n  const loading = props.loading;\n  const article = props.post;\n  return __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.contentWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(CardHeader, {\n    avatar: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      variant: \"circle\",\n      width: 40,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }) : __jsx(Avatar, {\n      alt: `${article.author}_avatar`,\n      src: \"/assets/icons/orange-world.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }),\n    title: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      style: {\n        marginBottom: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }) : article.author,\n    titleTypographyProps: {\n      color: 'primary'\n    },\n    subheader: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"40%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }\n    }) : generateBlogPostDate(article.created_at),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), loading ? __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"rect\",\n    className: classes.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }) : __jsx(CardMedia, {\n    className: classes.media,\n    image: `${link.STRAPI_URL}${article.titleImage.url}`,\n    title: article.titleImage.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, loading ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, __jsx(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }), __jsx(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    width: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, article.categories.map((tag, index) => __jsx(\"div\", {\n    value: tag.name,\n    id: index,\n    key: `${tag}-${index}`,\n    className: classes.tagWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"button\",\n    className: classes.tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 45\n    }\n  }, tag.name))), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, article.title)))), __jsx(CardActions, {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, loading ? __jsx(Skeleton, {\n    animation: \"wave\",\n    width: 93,\n    height: 29,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }) : __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    endIcon: __jsx(ArrowRightAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 38\n      }\n    }),\n    onClick: () => {\n      Router.push(`/blogpost/${article.id}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"Read more\")));\n}\n\n_s(Preview, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/components/content/blog/Preview.js"],"names":["React","makeStyles","Router","Card","CardHeader","CardContent","CardMedia","Avatar","Typography","CardActions","Button","ArrowRightAlt","Skeleton","generateBlogPostDate","link","useStyles","theme","root","width","height","contentWrapper","media","breakpoints","up","tag","padding","spacing","color","palette","common","white","tagWrapper","cursor","backgroundColor","primary","main","display","marginRight","marginTop","borderRadius","title","fontWeight","light","lineHeight","buttonWrapper","flexDirection","justifyContent","Preview","props","classes","loading","article","post","author","marginBottom","created_at","STRAPI_URL","titleImage","url","name","categories","map","index","push","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,SAAxC,EAAmDC,MAAnD,EAA2DC,UAA3D,EAAuEC,WAAvE,EAAoFC,MAApF,QAAkG,mBAAlG;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,OAAO,KAAKC,IAAZ,MAAsB,gCAAtB;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAEe,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,MAAM,EAAE;AAFN,GAD+B;AAKrCC,EAAAA,cAAc,EAAE,EALqB;AAQrCC,EAAAA,KAAK,EAAE;AACH,KAACL,KAAK,CAACM,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BJ,MAAAA,MAAM,EAAE;AADkB;AAD3B,GAR8B;AAarCK,EAAAA,GAAG,EAAE;AACDC,IAAAA,OAAO,EAAET,KAAK,CAACU,OAAN,CAAc,GAAd,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CADR;AAEDC,IAAAA,KAAK,EAAEX,KAAK,CAACY,OAAN,CAAcC,MAAd,CAAqBC;AAF3B,GAbgC;AAiBrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE,SADA;AAERC,IAAAA,eAAe,EAAEjB,KAAK,CAACY,OAAN,CAAcM,OAAd,CAAsBC,IAF/B;AAGRC,IAAAA,OAAO,EAAE,cAHD;AAIRC,IAAAA,WAAW,EAAErB,KAAK,CAACU,OAAN,CAAc,GAAd,CAJL;AAKRY,IAAAA,SAAS,EAAEtB,KAAK,CAACU,OAAN,CAAc,GAAd,CALH;AAMRa,IAAAA,YAAY,EAAEvB,KAAK,CAACU,OAAN,CAAc,GAAd;AANN,GAjByB;AAyBrCc,EAAAA,KAAK,EAAE;AACHF,IAAAA,SAAS,EAAEtB,KAAK,CAACU,OAAN,CAAc,CAAd,CADR;AAEHe,IAAAA,UAAU,EAAE,GAFT;AAGHd,IAAAA,KAAK,EAAEX,KAAK,CAACY,OAAN,CAAcM,OAAd,CAAsBQ,KAH1B;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAzB8B;AA+BrCC,EAAAA,aAAa,EAAE;AACXR,IAAAA,OAAO,EAAE,MADE;AAEXS,IAAAA,aAAa,EAAE,KAFJ;AAGXC,IAAAA,cAAc,EAAE;AAHL;AA/BsB,CAAZ,CAAD,CAA5B;AAuCA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAMC,OAAO,GAAGlC,SAAS,EAAzB;AAEA,QAAMmC,OAAO,GAAGF,KAAK,CAACE,OAAtB;AACA,QAAMC,OAAO,GAAGH,KAAK,CAACI,IAAtB;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAAChC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEgC,OAAO,CAAC7B,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,MAAM,EACF8B,OAAO,GAEH,MAAC,QAAD;AAAU,MAAA,SAAS,EAAC,MAApB;AAA2B,MAAA,OAAO,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAE,EAAnD;AAAuD,MAAA,MAAM,EAAE,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,GAIH,MAAC,MAAD;AACI,MAAA,GAAG,EAAG,GAAEC,OAAO,CAACE,MAAO,SAD3B;AAEI,MAAA,GAAG,EAAC,gCAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANZ;AAWI,IAAA,KAAK,EACDH,OAAO,GAEH,MAAC,QAAD;AAAU,MAAA,SAAS,EAAC,MAApB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,KAAK,EAAC,KAA7C;AAAmD,MAAA,KAAK,EAAE;AAAEI,QAAAA,YAAY,EAAE;AAAhB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,GAGDH,OAAO,CAACE,MAftB;AAiBI,IAAA,oBAAoB,EAAE;AAClB1B,MAAAA,KAAK,EAAE;AADW,KAjB1B;AAoBI,IAAA,SAAS,EACLuB,OAAO,GACD,MAAC,QAAD;AAAU,MAAA,SAAS,EAAC,MAApB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,KAAK,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAEDrC,oBAAoB,CAACsC,OAAO,CAACI,UAAT,CAvBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EA4BQL,OAAO,GAEH,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAC,MAAnC;AAA0C,IAAA,SAAS,EAAED,OAAO,CAAC5B,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,GAIH,MAAC,SAAD;AACI,IAAA,SAAS,EAAE4B,OAAO,CAAC5B,KADvB;AAEI,IAAA,KAAK,EAAG,GAAEP,IAAI,CAAC0C,UAAW,GAAEL,OAAO,CAACM,UAAR,CAAmBC,GAAI,EAFvD;AAGI,IAAA,KAAK,EAAEP,OAAO,CAACM,UAAR,CAAmBE,IAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCZ,EAsCI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,OAAO,GAEH,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,MAAM,EAAE,EAAnC;AAAuC,IAAA,KAAK,EAAE;AAAEI,MAAAA,YAAY,EAAE;AAAhB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,MAAM,EAAE,EAAnC;AAAuC,IAAA,KAAK,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFG,GAOH,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,OAAO,CAACS,UAAR,CAAmBC,GAAnB,CAAuB,CAACrC,GAAD,EAAMsC,KAAN,KACnB;AAAK,IAAA,KAAK,EAAEtC,GAAG,CAACmC,IAAhB;AAAsB,IAAA,EAAE,EAAEG,KAA1B;AAAiC,IAAA,GAAG,EAAG,GAAEtC,GAAI,IAAGsC,KAAM,EAAtD;AAAyD,IAAA,SAAS,EAAEb,OAAO,CAAClB,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAEkB,OAAO,CAACzB,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GAAG,CAACmC,IADT,CADJ,CADJ,CAFR,EAUI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEV,OAAO,CAACT,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKW,OAAO,CAACX,KADb,CAVJ,CATZ,CAtCJ,CADJ,EAiEI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAES,OAAO,CAACL,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQM,OAAO,GACD,MAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAE,EAAlC;AAAsC,IAAA,MAAM,EAAE,EAA9C;AAAkD,IAAA,KAAK,EAAE;AAAEI,MAAAA,YAAY,EAAE;AAAhB,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGH,MAAC,MAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAII,IAAA,OAAO,EAAE,MAAM;AAAEpD,MAAAA,MAAM,CAAC6D,IAAP,CAAa,aAAYZ,OAAO,CAACa,EAAG,EAApC;AAAwC,KAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALZ,CAjEJ,CADJ;AAmFH;;GAzFuBjB,O;UACJhC,S;;;KADIgC,O","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Router from 'next/router';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, CardActions, Button } from '@material-ui/core';\nimport { ArrowRightAlt } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab';\nimport { generateBlogPostDate } from '../../../utilities/helper-methods';\nimport * as link from '../../../utilities/link-config';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 'auto',\n        height: '100%'\n    },\n    contentWrapper: {\n\n    },\n    media: {\n        [theme.breakpoints.up('xs')]: {\n            height: 190\n        },\n    },\n    tag: {\n        padding: theme.spacing(0.5, 1, 0.5, 1),\n        color: theme.palette.common.white\n    },\n    tagWrapper: {\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary.main,\n        display: 'inline-block',\n        marginRight: theme.spacing(0.5),\n        marginTop: theme.spacing(0.5),\n        borderRadius: theme.spacing(0.5)\n    },\n    title: {\n        marginTop: theme.spacing(1),\n        fontWeight: 700,\n        color: theme.palette.primary.light,\n        lineHeight: 1\n    },\n    buttonWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n\n    }\n}));\n\nexport default function Preview(props) {\n    const classes = useStyles();\n\n    const loading = props.loading\n    const article = props.post\n\n    return (\n        <Card className={classes.root}>\n            <div className={classes.contentWrapper}>\n                <CardHeader\n                    avatar={\n                        loading\n                            ?\n                            <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                            :\n                            <Avatar\n                                alt={`${article.author}_avatar`}\n                                src='/assets/icons/orange-world.png'\n                            />\n                    }\n                    title={\n                        loading\n                            ?\n                            <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n                            : article.author\n                    }\n                    titleTypographyProps={{\n                        color: 'primary',\n                    }}\n                    subheader={\n                        loading\n                            ? <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n                            : generateBlogPostDate(article.created_at)\n                    }\n                />\n                {\n                    loading\n                        ?\n                        <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n                        :\n                        <CardMedia\n                            className={classes.media}\n                            image={`${link.STRAPI_URL}${article.titleImage.url}`}\n                            title={article.titleImage.name}\n                        />\n                }\n                <CardContent>\n                    {\n                        loading\n                            ?\n                            <React.Fragment>\n                                <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {\n                                    article.categories.map((tag, index) => (\n                                        <div value={tag.name} id={index} key={`${tag}-${index}`} className={classes.tagWrapper}>\n                                            <Typography variant=\"button\" className={classes.tag}>\n                                                {tag.name}\n                                            </Typography>\n                                        </div>\n                                    ))\n                                }\n                                <Typography className={classes.title} variant=\"h6\">\n                                    {article.title}\n                                </Typography>\n                            </React.Fragment>\n                    }\n                </CardContent>\n            </div>\n            <CardActions className={classes.buttonWrapper}>\n                {\n                    loading\n                        ? <Skeleton animation=\"wave\" width={93} height={29} style={{ marginBottom: 6 }} />\n                        :\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            endIcon={<ArrowRightAlt />}\n                            onClick={() => { Router.push(`/blogpost/${article.id}`) }}>\n                            Read more\n                    </Button>\n                }\n            </CardActions>\n        </Card>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}