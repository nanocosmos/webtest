{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/pages/blogpost/[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getAllPostIds } from '../../utilities/helper-methods';\nimport * as link from '../../utilities/link-config';\nimport Article from '../../components/content/blog/Article';\nconst useStyles = makeStyles(theme => ({}));\n\nfunction BlogPost({\n  post\n}) {\n  console.log(post);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"nanocosmos Blogpost\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), \"This is a blogpost\", __jsx(Article, {\n    image: `${link.STRAPI_URL}${post.icon.url}`,\n    title: post.title,\n    author: post.author,\n    description: post.description,\n    time: article.created_at,\n    tags: article.categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch(`${link.STRAPI_URL}/articles`);\n  const posts = await res.json();\n  const paths = getAllPostIds(posts);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetch(`${link.STRAPI_URL}/articles/${params.id}`);\n  const post = await res.json();\n  return {\n    props: {\n      post\n    }\n  };\n}\nexport default BlogPost;","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/pages/blogpost/[id].js"],"names":["React","Head","makeStyles","getAllPostIds","link","Article","useStyles","theme","BlogPost","post","console","log","classes","root","STRAPI_URL","icon","url","title","author","description","article","created_at","categories","getStaticPaths","res","fetch","posts","json","paths","fallback","getStaticProps","params","id","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,6BAAtB;AAEA,OAAOC,OAAP,MAAoB,uCAApB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY,EAAZ,CAAD,CAA5B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AACA,SACI;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,wBAMI,MAAC,OAAD;AACI,IAAA,KAAK,EAAG,GAAET,IAAI,CAACU,UAAW,GAAEL,IAAI,CAACM,IAAL,CAAUC,GAAI,EAD9C;AAEI,IAAA,KAAK,EAAEP,IAAI,CAACQ,KAFhB;AAGI,IAAA,MAAM,EAAER,IAAI,CAACS,MAHjB;AAII,IAAA,WAAW,EAAET,IAAI,CAACU,WAJtB;AAKI,IAAA,IAAI,EAAEC,OAAO,CAACC,UALlB;AAMI,IAAA,IAAI,EAAED,OAAO,CAACE,UANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAiBH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAErB,IAAI,CAACU,UAAW,WAApB,CAAvB;AACA,QAAMY,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACA,QAAMC,KAAK,GAAGzB,aAAa,CAACuB,KAAD,CAA3B;AAEA,SAAO;AACHE,IAAAA,KADG;AACIC,IAAAA,QAAQ,EAAE;AADd,GAAP;AAGH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMP,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAErB,IAAI,CAACU,UAAW,aAAYiB,MAAM,CAACC,EAAG,EAA1C,CAAvB;AACA,QAAMvB,IAAI,GAAG,MAAMe,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAE;AACHxB,MAAAA;AADG;AADJ,GAAP;AAKH;AAED,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport Head from 'next/head'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getAllPostIds } from '../../utilities/helper-methods';\nimport * as link from '../../utilities/link-config';\n\nimport Article from '../../components/content/blog/Article';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction BlogPost({post}) {\n\n    console.log(post)\n\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Head>\n                <title>nanocosmos Blogpost</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            This is a blogpost\n            <Article\n                image={`${link.STRAPI_URL}${post.icon.url}`}\n                title={post.title}\n                author={post.author}\n                description={post.description}\n                time={article.created_at}\n                tags={article.categories}\n            />\n        </div>\n    )\n}\n\nexport async function getStaticPaths() {\n    const res = await fetch(`${link.STRAPI_URL}/articles`);\n    const posts = await res.json();\n    const paths = getAllPostIds(posts);\n\n    return {\n        paths, fallback: false\n    }\n}\n\nexport async function getStaticProps({ params }) {\n    const res = await fetch(`${link.STRAPI_URL}/articles/${params.id}`);\n    const post = await res.json();\n\n    return {\n        props: {\n            post\n        }\n    }\n}\n\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}