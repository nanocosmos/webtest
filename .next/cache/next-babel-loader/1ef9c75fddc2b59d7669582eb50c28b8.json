{"ast":null,"code":"var _jsxFileName = \"/Users/annamatic/Desktop/webtest/components/content/blog/Preview.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, CardActions, Button } from '@material-ui/core';\nimport { ArrowRightAlt } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab';\nimport { generateBlogPostDate } from '../../../utilities/helper-methods';\nimport * as link from '../../../utilities/link-config';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('xs')]: {},\n    [theme.breakpoints.up('sm')]: {},\n    [theme.breakpoints.up('md')]: {},\n    [theme.breakpoints.up('lg')]: {},\n    [theme.breakpoints.up('xl')]: {}\n  }\n}));\nexport default function Preview(props) {\n  _s();\n\n  const classes = useStyles();\n  const router = useRouter();\n  const loading = props.loading;\n  const article = props.post;\n  console.log(article);\n\n  const redirect = id => {\n    router.push(`blogpost/${id}`);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(CardHeader, {\n    avatar: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      variant: \"circle\",\n      width: 40,\n      height: 40,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }) : __jsx(Avatar, {\n      alt: `${article.author}_avatar`,\n      src: \"/assets/icons/orange-world.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }),\n    title: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      style: {\n        marginBottom: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }) : article.author,\n    titleTypographyProps: {\n      color: 'primary'\n    },\n    subheader: loading ? __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"40%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }\n    }) : generateBlogPostDate(article.created_at),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, loading ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, __jsx(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }), __jsx(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    width: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, article.tags.map((tag, index) => __jsx(\"div\", {\n    value: tag.name,\n    id: index,\n    key: `${tag}-${index}`,\n    className: classes.tagWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  }, __jsx(Typography, {\n    variant: \"button\",\n    className: classes.tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 49\n    }\n  }, tag.name))), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, article.title)))), __jsx(CardActions, {\n    className: classes.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, loading ? __jsx(Skeleton, {\n    animation: \"wave\",\n    width: 93,\n    height: 29,\n    style: {\n      marginBottom: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 31\n    }\n  }) : __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    endIcon: __jsx(ArrowRightAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 42\n      }\n    }),\n    onClick: () => redirect(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"Read more\"))), __jsx(\"div\", {\n    className: classes.blogWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, props.articles !== undefined ? props.articles.map((singleArticle, index) => __jsx(Article, {\n    tagClicked: tagClicked,\n    key: index,\n    article: {\n      id: singleArticle.id,\n      author: singleArticle.author,\n      avatar: '/assets/icons/orange-world.png',\n      title: singleArticle.title,\n      date: generateBlogPostDate(singleArticle.created_at),\n      imageSrc: `${link.STRAPI_URL}${singleArticle.titleImage.url}`,\n      imageAlt: singleArticle.titleImage.name,\n      tags: singleArticle.categories\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  })) : __jsx(Article, {\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 27\n    }\n  })));\n}\n\n_s(Preview, \"y+nxznVgQ96pr4dCg1EC6WdujUg=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/Users/annamatic/Desktop/webtest/components/content/blog/Preview.js"],"names":["React","makeStyles","useRouter","Card","CardHeader","CardContent","CardMedia","Avatar","Typography","CardActions","Button","ArrowRightAlt","Skeleton","generateBlogPostDate","link","useStyles","theme","root","breakpoints","up","Preview","props","classes","router","loading","article","post","console","log","redirect","id","push","card","author","marginBottom","color","created_at","tags","map","tag","index","name","tagWrapper","title","buttonWrapper","blogWrapper","articles","undefined","singleArticle","tagClicked","avatar","date","imageSrc","STRAPI_URL","titleImage","url","imageAlt","categories"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, Typography, CardActions, Button } from '@material-ui/core';\nimport { ArrowRightAlt } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab';\nimport { generateBlogPostDate } from '../../../utilities/helper-methods';\nimport * as link from '../../../utilities/link-config';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.up('xs')]: {},\n        [theme.breakpoints.up('sm')]: {},\n        [theme.breakpoints.up('md')]: {},\n        [theme.breakpoints.up('lg')]: {},\n        [theme.breakpoints.up('xl')]: {}\n    }\n}));\n\nexport default function Preview(props) {\n    const classes = useStyles();\n    const router = useRouter();\n\n\n    const loading = props.loading\n    const article = props.post\n    console.log(article)\n\n    const redirect = (id) => {\n        router.push(`blogpost/${id}`)\n    }\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n                <div>\n                    <CardHeader\n                        avatar={\n                            loading\n                                ?\n                                <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n                                :\n                                <Avatar\n                                    alt={`${article.author}_avatar`}\n                                    src='/assets/icons/orange-world.png'\n                                />\n                        }\n                        title={\n                            loading\n                                ?\n                                <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />\n                                : article.author\n                        }\n                        titleTypographyProps={{\n                            color: 'primary',\n                        }}\n                        subheader={\n                            loading\n                                ? <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n                                : generateBlogPostDate(article.created_at)\n                        }\n                    />\n                    {/* {\n                        loading\n                            ?\n                            <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\n                            :\n                            <CardMedia\n                                className={classes.media}\n                                image={`${link.STRAPI_URL}${article.titleImage.url}`}\n                                title={singleArticle.titleImage.name}\n                            />\n                    } */}\n                    <CardContent>\n                        {\n                            loading\n                                ?\n                                <React.Fragment>\n                                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    {\n                                        article.tags.map((tag, index) => (\n                                            <div value={tag.name} id={index} key={`${tag}-${index}`} className={classes.tagWrapper}>\n                                                <Typography variant=\"button\" className={classes.tag}>\n                                                    {tag.name}\n                                                </Typography>\n                                            </div>\n                                        ))\n                                    }\n                                    <Typography className={classes.title} variant=\"h6\">\n                                        {article.title}\n                                    </Typography>\n                                </React.Fragment>\n                        }\n                    </CardContent>\n                </div>\n                <CardActions className={classes.buttonWrapper}>\n                    {\n                        loading\n                            ? <Skeleton animation=\"wave\" width={93} height={29} style={{ marginBottom: 6 }} />\n                            :\n                            <Button\n                                size=\"small\"\n                                color=\"primary\"\n                                endIcon={<ArrowRightAlt />}\n                                onClick={() => redirect(props.id)}>\n                                Read more\n                    </Button>\n                    }\n                </CardActions>\n            </Card>\n            <div className={classes.blogWrapper}>\n                {\n                    props.articles !== undefined\n                        ?\n                        props.articles.map((singleArticle, index) => (\n                            <Article\n                                tagClicked={tagClicked}\n                                key={index}\n                                article={{\n                                    id: singleArticle.id,\n                                    author: singleArticle.author,\n                                    avatar: '/assets/icons/orange-world.png',\n                                    title: singleArticle.title,\n                                    date: generateBlogPostDate(singleArticle.created_at),\n                                    imageSrc: `${link.STRAPI_URL}${singleArticle.titleImage.url}`,\n                                    imageAlt: singleArticle.titleImage.name,\n                                    tags: singleArticle.categories\n                                }}\n                            />\n                        ))\n                        : <Article loading />\n                }\n            </div>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}